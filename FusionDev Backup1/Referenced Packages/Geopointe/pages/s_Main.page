<apex:page tabStyle="Geopointe_Setup__tab" controller="geopointe.s_Main" sidebar="false" action="{!init}" title="Geopointe - Setup">

	<!-- CSS -->
	<apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/ui/css/smoothness/jquery-ui-1.9.2.custom.min.css')}"/> <!-- jQuery UI CSS -->
	<apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/fieldSelector/css/fieldselector.css')}"/> <!-- FieldSelector plugin CSS -->
	<apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/css/common/common.css')}"/> <!-- Common geopointe CSS -->
	<apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/css/map/map.css')}"/> <!-- map css -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__jquery, '/css/s_main.css')}"/> <!-- CSS for s_Main.page -->
    <apex:stylesheet value="{!URLFOR($Resource.geopointe__SLDS, '/0.8.0/assets/styles/salesforce-lightning-design-system-vf.min.css')}"/> <!-- Salesforce Lightning Design System -->

    <style type="text/css">
        .rolodex a.listItemPad { padding: 0 5px; }
        div.message { margin-bottom: 20px; }
    </style>

    <!-- isolate Lightning CSS adjustments -->
    <apex:outputPanel layout="none" rendered="{!$User.UITheme == 'Theme4d'}">
        <style>
            .helpButton .helpOrb { background-image: url("/img/help/helpOrbs.gif"); background-repeat: no-repeat; height: 15px; width: 15px; background-position: 0 0; margin-right: -7px; }
            .helpButtonOn .helpOrb { background-image: url("/img/help/helpOrbs.gif"); background-repeat: no-repeat; height: 15px; width: 15px; background-position: -21px 0; margin-right: -7px; }
        </style>
    </apex:outputPanel>

	<!-- jQuery -->
	<apex:includeScript value="{!URLFOR($Resource.geopointe__jquery, '/jquery-1.8.3.min.js')}" /> <!-- core jQuery -->
	<apex:includeScript value="{!URLFOR($Resource.geopointe__jquery, '/ui/js/jquery-ui-1.9.2.custom.min.js')}" /> <!-- jQuery UI -->
		
	<!-- Include the Geopointe functions -->
	<apex:includeScript value="{!$Resource.geopointe__GeopointeJS}" />
	
	<!-- Other packages -->
	<apex:includeScript value="{!$Resource.geopointe__sorttable}" /> <!-- Sorttable -->
	<apex:includeScript value="{!$Page.geopointe__js_GA}" /> <!-- Google Analytics -->
    <c:walkMeSnippet /> <!-- Walk me JavaScript -->

<apex:sectionHeader title="Geopointe" subtitle="Setup"/>

<apex:outputPanel id="pageMessages">	
    <apex:pageMessages escape="false" />
</apex:outputPanel>

<apex:form style="margin-top: -10px;">
<apex:outputPanel layout="block" style="padding: 3px; margin-left: 30px; font-size: 1.1em;">
	<apex:panelGrid columns="2">
        <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
        To learn more, visit <a href="http://help.geopointe.com/" target="_blank"><b>http://help.geopointe.com/</b></a>. 
        For assistance, please contact support at <a href="mailto:help@geopointe.com"><b>help@geopointe.com</b></a>.
    </apex:panelGrid>
</apex:outputPanel>
<apex:outputPanel id="wrapperDIV" layout="block" rendered="{!initSuccess}">

<div id="setupTabs" style="display:none;">
    <ul>
        <li><a href="#tab-org">Org Settings</a></li>
        <li><a href="#tab-mapObjects">Map Objects</a></li>
        <!-- <li><a href="#tab-dataSets">Data Sets</a></li> -->
        <li><a href="#tab-actions">Actions</a></li>
        <li><a href="#tab-mapStyles">Map Styles</a></li>
        <!-- <li><a href="#tab-layers">KML Layers</a></li> -->
        <li style="display:{!assignmentAccess}"><a href="#tab-assignmentPlans">Assignment Plans</a></li>
        <li><a href="#tab-batchJobs">Batch Jobs</a></li>
        <li><a href="#tab-fieldMapping">Geopointe Data Layer</a></li>
		<li><a href="#tab-userSettings">User Settings</a></li>
    </ul>

    <div id="tab-org">
        <!-- Organization Preferences & Country Codes -->
        <table style="width:100%;" cellpadding="0" cellspacing="0"><tr>
            <td style="vertical-align:top; padding-right: 5px;">
                <!-- Organization Preferences -->
                <apex:outputPanel >
                <apex:pageBlock title="Organization Settings" helpTitle="Learn more about Organization Settings" helpUrl="http://help.geopointe.com/customer/portal/articles/1811025-organization-settings">
                    <apex:pageBlockButtons location="top" id="OrgSettingTopButtons" styleClass="pbButtonWalkme">
                        <apex:commandButton action="{!goToEditOrgSettings}" value="Edit"/>
                        
                        <apex:commandButton action="{!updatePermissions}" value="Get License Information" rerender="pageMessages" 
                        onclick="if(confirm('This process will obtain information from Geopointe related to your Geopointe license.\n\nContinue?')){geopointeAjaxStart('body','Retrieving Permissions...');}else{return false}"
                        oncomplete="geopointeAjaxEnd();"/>

                        <apex:commandButton action="{!updateUserPermissions}" value="Set User Permissions" rerender="pageMessages" 
                        onclick="if(confirm('This process will assign your users to Permission Sets that come with the Geopointe application.\n\nThis helps to ensure your users have access to core Geopointe functionality.\n\nContinue?')){geopointeAjaxStart('body','Updating Permissions...');}else{return false}"
                        oncomplete="geopointeAjaxEnd();"/>
                        
                        <apex:commandButton action="{!removeUserPermissions}" value="Remove User Permissions" rerender="pageMessages" 
                        onclick="if(confirm('This process will unassign your users from the Permission Sets that come with the Geopointe application.\n\nThis is required prior to uninstalling the application..\n\nContinue?')){geopointeAjaxStart('body','Removing Permissions...');}else{return false}"
                        oncomplete="geopointeAjaxEnd();"/>

                    </apex:pageBlockButtons>

                    <!-- Trial Notice / Buy Now -->
                    <apex:outputPanel rendered="{!orgSettings.settings.geopointe__License_Status__c == 'Trial'}">
                        <div class="message infoM4" role="alert">
                            <table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:auto;font-size:13px;">
                                <tbody>
                                    <tr valign="top">
                                        <td><img alt="info" class="msgIcon" src="/s.gif" title="info"/></td>
                                        <td class="messageCell">
                                            <div>
                                            <div class="messageText">
                                                Thank you for installing Geopointe and we hope you find it to be a great tool for running and growing your business.
                                                
                                                <apex:outputPanel rendered="{!NOT(ISNULL(orgSettings.settings.geopointe__License_Expiration_Date__c))}">
                                                    It looks like your trial ends on <strong><apex:outputField value="{!orgSettings.settings.geopointe__License_Expiration_Date__c}"/></strong>. 
                                                </apex:outputPanel><Br/><br/>

                                                If you have any questions or need assistance 
                                                during the trial please contact <a href="mailto:help@geopointe.com" target="_blank">help@geopointe.com</a>.<br/><br/>
                                                
                                                To purchase Geopointe you can use the Buy It Now button below or contact us at <a href="mailto:sales@geopointe.com" target="_blank">sales@geopointe.com</a>.

                                                <div style="text-align: center; padding: 8px 5px 5px 5px;">
                                                    <a href="{!checkoutURL}" target="_blank" style="text-decoration:none;">
                                                        <input type="button" class="btn btnImportant" value="Buy It Now"/>
                                                    </a>
                                                </div>
                                            </div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </apex:outputPanel>

                     <apex:pageBlockSection title="Organization Information">
                        <apex:pageBlockSectionItem >
                            <apex:outputText value="Organization ID"/>
                            <apex:outputText value="{!$Organization.Id}"/>
                        </apex:pageBlockSectionItem>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Primary_Contact_Name__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Organization_Name__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Primary_Contact_Phone__c}"/>
                        <apex:pageBlockSectionItem >
                            <apex:outputText value="Address"/>
                            <apex:outputText value="{!orgFormattedAddress}"/>
                        </apex:pageBlockSectionItem>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Primary_Contact_Email__c}"/>
                     </apex:pageBlockSection>
                    <apex:pageBlockSection title="Mapping Preferences">
                        <apex:outputField value="{!orgSettings.settings.geopointe__Minimum_Zoom_search_map_bounds__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Default_Country_Code__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Same_Location_Markers__c}" rendered="{!orgSettings.settings.geopointe__Mapping_Provider__c == 'Google'}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Maximum_Search_Nearby_Radius__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Enable_Inline_Editing__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Number_of_Route_Fields__c}"/>
                        <apex:outputField value="{!orgSettings.settings2.geopointe__Report_Sourced_Data_Set_Enabled__c}"/>
                        <apex:outputField value="{!orgSettings.settings2.geopointe__Custom_Google_Maps_URL__c}" rendered="{!orgSettings.permCustomGoogleMapsURL}"/>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="Thematic Maps"/>
                            <apex:outputPanel id="thematicMapButtons">
                                <apex:outputField value="{!orgSettings.settings.geopointe__Thematic_Maps_Enabled__c}"/>
                                &nbsp;&nbsp;&nbsp;
                                <apex:commandButton action="{!goToEnableThematics}" value="Enable Thematic Maps" rendered="{!NOT(orgSettings.settings.geopointe__Thematic_Maps_Enabled__c)}"/>
                                <apex:commandButton action="{!disableThematicMaps}" value="Disable Thematic Maps" rendered="{!orgSettings.settings.geopointe__Thematic_Maps_Enabled__c}" reRender="thematicMapButtons, batchjob_schedules"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!AND(orgSettings.settings2.geopointe__Perm_Pulse__c, orgSettings.settings2.geopointe__Pulse_API_Key__c!='')}">
                            <apex:outputLabel value="Geopointe Pulse"/>
                            <apex:outputPanel id="pulseButtons">
                                <apex:outputField value="{!orgSettings.settings2.geopointe__Pulse_Enabled__c}"/>
                                &nbsp;&nbsp;&nbsp;
                                <apex:commandButton action="{!goToEnablePulse}" value="Enable Pulse" rendered="{!NOT(orgSettings.settings2.geopointe__Pulse_Enabled__c)}"/>
                                <apex:commandButton action="{!disablePulse}" value="Disable Pulse" rendered="{!orgSettings.settings2.geopointe__Pulse_Enabled__c}" reRender="pulseButtons, batchjob_schedules"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!AND(AND(orgSettings.settings2.geopointe__Perm_Pulse__c, orgSettings.settings2.geopointe__Pulse_API_Key__c!=''), orgSettings.settings2.geopointe__Pulse_Enabled__c)}">
                            <apex:outputLabel value="Pulse Reference Timezone"/>
                            <apex:outputLabel value="{!orgSettings.settings2.geopointe__Pulse_Timezone__c}"/>
                        </apex:pageBlockSectionItem>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection title="Check-In / Check-Out Preferences">
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_In_Creates_Task__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_Out_Creates_Task__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_In_Task_Record_Type_Name__c}" rendered="{!orgSettings.hasTaskRecordTypeOptions}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_Out_Task_Record_Type_Name__c}" rendered="{!orgSettings.hasTaskRecordTypeOptions}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_In_Task_Field_Set_Label__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_Out_Task_Field_Set_Label__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_In_Task_Subject_Prefix__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Check_Out_Task_Subject_Prefix__c}"/>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.geopointe__Settings2__c.fields.geopointe__Check_In_Field_Set_Name__c.label}"/>
                            <apex:outputText value="{!orgSettings.checkInFieldSetLabel}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.geopointe__Settings2__c.fields.geopointe__Check_Out_Field_Set_Name__c.label}"/>
                            <apex:outputText value="{!orgSettings.checkOutFieldSetLabel}"/>
                        </apex:pageBlockSectionItem>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Post_Check_In_Image_to_Feed__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Post_Check_Out_Image_to_Feed__c}"/>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.geopointe__Settings2__c.fields.geopointe__Checkin_Share_on_Feed_Visbility__c.label}"/>
                            <apex:outputPanel >
                                <apex:outputText value="Visible" rendered="{!orgSettings.settings2.geopointe__Checkin_Share_on_Feed_Visbility__c == 'visible'}"/>
                                <apex:outputText value="Hidden (Post to Feed)" rendered="{!orgSettings.settings2.geopointe__Checkin_Share_on_Feed_Visbility__c == 'hidden_post'}"/>
                                <apex:outputText value="Hidden (Do not Post)" rendered="{!orgSettings.settings2.geopointe__Checkin_Share_on_Feed_Visbility__c == 'hidden_no_post'}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.geopointe__Settings2__c.fields.geopointe__Checkout_Share_on_Feed_Visbility__c.label}"/>
                            <apex:outputPanel >
                                <apex:outputText value="Visible" rendered="{!orgSettings.settings2.geopointe__Checkout_Share_on_Feed_Visbility__c == 'visible'}"/>
                                <apex:outputText value="Hidden (Post to Feed)" rendered="{!orgSettings.settings2.geopointe__Checkout_Share_on_Feed_Visbility__c == 'hidden_post'}"/>
                                <apex:outputText value="Hidden (Do not Post)" rendered="{!orgSettings.settings2.geopointe__Checkout_Share_on_Feed_Visbility__c == 'hidden_no_post'}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:outputField value="{!orgSettings.settings2.geopointe__Check_In_Hide_Map__c}"/>
                        <apex:outputField value="{!orgSettings.settings2.geopointe__Check_Out_Hide_Map__c}"/>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection title="Batch Geocode Preferences">
                        <apex:outputField value="{!orgSettings.settings.geopointe__Log_Batch_Geocode_Results__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Email_Batch_Geocode_Results__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Notify_If_No_Records_To_Process__c}"/>
                    </apex:pageBlockSection>
                    <apex:pageBlockSection title="Debug" rendered="{!NOT(ISNULL($CurrentPage.parameters.debug))}">
                        
                        <apex:outputField value="{!orgSettings.settings.geopointe__Last_Org_Info_Update_Send_Info__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Last_Org_Info_Update_Get_Perms__c}"/>
                        
                        <apex:outputField value="{!orgSettings.settings.geopointe__Last_Geo_Location_Cleanup__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Last_Route_Cleanup__c}"/>
                        
                        <apex:outputField value="{!orgSettings.settings.geopointe__Last_Temp_Cleanup__c}"/>
                        <apex:outputText value=""/>
                        
                        <apex:outputField value="{!orgSettings.settings.geopointe__Perm_Maps__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Perm_API__c}"/>
                        
                        <apex:outputField value="{!orgSettings.settings.geopointe__Perm_Visualize__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Perm_Data_Cleansing__c}"/>
                        
                        <apex:outputField value="{!orgSettings.settings.geopointe__Perm_Change_Provider__c}"/>
                        <apex:outputField value="{!orgSettings.settings2.geopointe__Perm_Custom_Google_Maps_URL__c}"/>

                        <apex:outputField value="{!orgSettings.settings.geopointe__Perm_SpatialKey__c}"/>
                        <apex:outputField value="{!orgSettings.settings.geopointe__Perm_Mobile__c}"/>
                        
                    </apex:pageBlockSection>
                </apex:pageBlock>
               </apex:outputPanel>
            </td>
            <td style="width:350px; vertical-align:top;" class="gp_setupSidebar">

                <!-- License Status -->
                <apex:outputPanel styleClass="gp_licenseStatus">
                    <apex:pageBlock title="License Status" >
                        <apex:pageBlockSection columns="1">
                            <apex:outputField value="{!orgSettings.settings.geopointe__License_Status__c}"/>
                            <apex:outputField value="{!orgSettings.settings.geopointe__License_Expiration_Date__c}"/>
                        </apex:pageBlockSection>
                    
                        <apex:outputPanel style="text-align: center; padding: 5px;" layout="block" rendered="{!orgSettings.settings.geopointe__License_Status__c == 'Active'}">
                            <input type="button" class="btn btnImportant" value="Buy More Licenses" onClick="window.open('{!checkoutURL}','_blank');" />
                        </apex:outputPanel>
                    </apex:pageBlock>
                </apex:outputPanel>

                <!-- Analytics -->
                <apex:outputPanel >
                    <apex:pageBlock title="Analytics Setup">
                        <apex:outputPanel layout="block" style="padding: 3px;">
                            <apex:panelGrid columns="2">
                                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                                <apex:outputText value="Geopointe Analytics offers a robust solution for geographically analyzing your Salesforce data, 
                                                        whether it be 100s of records or 100,000 records."/>
                            </apex:panelGrid>
                        </apex:outputPanel>
                        <apex:outputPanel layout="block" style="text-align: center;">
                            <apex:commandButton action="{!gotoManageAnalytics}" value="Analytics Setup"/>
                        </apex:outputPanel>
                    </apex:pageBlock>
                </apex:outputPanel>
                
                <!-- Country Codes -->
                <apex:outputPanel >
                    <apex:pageBlock title="Country Code Mappings">
                        <apex:outputPanel layout="block" style="padding: 3px;">
                            <apex:panelGrid columns="2">
                                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                                <apex:outputText value="Geopointe maintains a mapping of common country values to their 2-character ISO Country Code. This greatly improves Geocoding accuracy."/>
                            </apex:panelGrid>
                        </apex:outputPanel>
                        <apex:panelGrid columns="2">
                            <apex:outputPanel >
                                <apex:outputText value="Country Code Mappings are needed. Press the Download Mappings button to get them." style="color: #FF1100; font-weight: bold;" rendered="{!ccCount=0}"/>
                                <apex:outputText value="# of mappings: {!ccCount}" rendered="{!ccCount>0}"/>
                                <br/>
                                <apex:outputText value="# of custom mappings: {!ccCountCustom}" rendered="{!ccCount>0}"/>
                                <br/>
                                <apex:outputLink value="{!$Page.geopointe__s_CountryCodeMapping}">Edit Mappings</apex:outputLink>
                            </apex:outputPanel>
                            <apex:outputPanel >
                                <br/>
                                <apex:commandButton action="{!refreshCCPublisherValues}" value="Download Mappings" onclick="geopointeAjaxStart('body','Downloading Mappings, this takes ~1 minute...');" />
                                <br/>
                            </apex:outputPanel>
                        </apex:panelGrid>
                    </apex:pageBlock>
                </apex:outputPanel>

                <!-- API Credits -->
                <apex:outputPanel styleClass="gp_licenseStatus">
                    <apex:pageBlock title="API Credits" >
                        <apex:pageBlockSection columns="1">
                            <apex:pageBlockSectionItem helpText="Daily usage will reset at {!DailyAPIResetTime}.">
                                <apex:outputLabel value="Daily Usage (Free)"/>
                                <apex:outputPanel >{!orgSettings.dailyAPICreditUsage} / {!orgSettings.dailyAPICreditLimit}</apex:outputPanel>
                            </apex:pageBlockSectionItem>    

                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="Paid Balance"/>
                                <apex:outputPanel >{!orgSettings.paidAPICreditBalance}</apex:outputPanel>
                            </apex:pageBlockSectionItem>
                        </apex:pageBlockSection>
                    </apex:pageBlock>
                </apex:outputPanel>
				
				<!-- Global Businesses and People Credits -->
				<apex:outputPanel styleClass="gp_licenseStatus">
					<apex:pageBlock title="Global Businesses and People Credits" >
						<apex:pageBlockSection columns="1">
							<apex:pageBlockSectionItem >
								<apex:outputLabel value="Credit Balance"/>
								<apex:outputPanel >{!orgSettings.globalBusinessAndPeopleCreditsBalance}</apex:outputPanel>
							</apex:pageBlockSectionItem>
							
							<apex:pageBlockSectionItem rendered="{!orgSettings.globalBusinessAndPeopleCreditsExpiration != '' && orgSettings.globalBusinessAndPeopleCreditsBalance != 0}">
								<apex:outputLabel value="Expires On"/>
								<apex:outputPanel >{!orgSettings.globalBusinessAndPeopleCreditsExpiration}</apex:outputPanel>
							</apex:pageBlockSectionItem>
						</apex:pageBlockSection>
					</apex:pageBlock>
				</apex:outputPanel>
            </td>
        </tr></table>
    </div>

    <div id="tab-mapObjects">
        <!-- Map Objects -->
        <apex:pageBlock title="Map Objects" id="MapObjects" helpTitle="Learn more about Map Objects" helpUrl="http://help.geopointe.com/customer/portal/articles/1811024-map-objects">
            
            <apex:pageBlockButtons location="top" id="MapObjectTopButtons">
                <apex:commandButton value="New Map Object" action="{!object_new}"/>
            </apex:pageBlockButtons>

            <apex:panelGrid columns="2" styleClass="setupTabInfo">
                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                <apex:outputPanel >
                    Map Objects are the custom or standard objects in your system that can be mapped. For example, if you want to map Accounts you 
                    will create an Account Map Object and setup the address fields that should be used for mapping.
                </apex:outputPanel>
            </apex:panelGrid>
            
            <apex:pageblockTable value="{!UberMapObjects}" var="umo" rowClasses="odd,even" styleClass="sortable">
                
                <apex:column headerValue="Action" style="font-weight:bold" headerClass="sorttable_nosort">
                    <apex:outputPanel >
                        
                        <apex:outputPanel >
                            <apex:commandLink value="Edit" action="{!object_edit}">
                                <apex:param value="{!umo.mo.Name}" assignTo="{!SelectedEntity}" name="sobj"/>
                            </apex:commandLink>
                        </apex:outputPanel>
                        
                        <apex:outputPanel rendered="{! umo.mo.IsActive && NOT(umo.isBeingReferenced) }">
                            &nbsp;|&nbsp;
                            <apex:commandLink value="Deactivate"  action="{!object_statusUpdate}" rerender="MapObjects, MapObjectsInvalid"
                            onclick="if(confirm('Are you sure you wish to deactivate this record? Deactivating a Map Object will disallow this object from being mapped, but will keep the record in your system in case you wish to activate it later.')){geopointeAjaxStart('body','Deactivating...');}else{return false}"
                            oncomplete="geopointeAjaxEnd();">
                                <apex:param value="Inactive" assignTo="{!setTo}" name="sobj_inactive"/>
                                <apex:param value="{!umo.mo.Name}" assignTo="{!SelectedEntity}" name="mo"/>
                            </apex:commandLink>  
                        </apex:outputPanel>
                        
                        <apex:outputPanel rendered="{! NOT(umo.mo.IsActive) && NOT(umo.mo.IsReferenceMapObject && NOT(umo.mo.ReferencedMapObjectIsActive))}">
                            &nbsp;|&nbsp;
                            <apex:commandLink value="Activate" action="{!object_statusUpdate}" rerender="MapObjects, MapObjectsInvalid" onclick="geopointeAjaxStart('body','Activating...');" oncomplete="geopointeAjaxEnd();">
                                <apex:param value="Active" assignTo="{!setTo}" name="sobj_active"/>
                                <apex:param value="{!umo.mo.Name}" assignTo="{!SelectedEntity}" name="mo"/>
                            </apex:commandLink>  
                        </apex:outputPanel>
                        
                        <apex:outputPanel rendered="{! NOT(umo.mo.IsActive) && NOT(umo.isBeingReferenced) }">
                            &nbsp;|&nbsp;
                            <apex:commandLink value="Delete" action="{!object_delete}" rerender="MapObjects, MapObjectsInvalid"
                            onclick="if(confirm('Are you sure you wish to delete this record? Deleting a Map Object will disallow this object from being mapped at all. If you think you might wish to map this object again, it is recommended to leave it as Inactive rather than deleting it.')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                            oncomplete="geopointeAjaxEnd();">
                                <apex:param value="{!umo.mo.Name}" assignTo="{!SelectedEntity}" name="sobjd"/>
                            </apex:commandLink>
                        </apex:outputPanel>
                        
                    </apex:outputPanel>
                </apex:column>
                
                <apex:column headerValue="Name">{!umo.mo.DisplayName}</apex:column>
                <!--<apex:column headerValue="API Name">{!SUBSTITUTE(umo.mo.Name,'geopointe__',' ')}</apex:column> Most people will never need this, maybe add back in future-->
                <apex:column headerValue="Object">{!SUBSTITUTE(umo.mo.SObjectName,'geopointe__',' ')}</apex:column>
                <apex:column headerValue="API Name">{!umo.mo.Name}</apex:column>

                <apex:column headerValue="Active">
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! umo.mo.IsActive }" />
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! NOT(umo.mo.IsActive) }" />
                </apex:column>
                
                <apex:column headerValue="Street Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['Street'], 'geopointe__',' ')}</apex:column>
                
                <apex:column headerValue="City Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['City'], 'geopointe__',' ')}</apex:column>
                
                <apex:column headerValue="State/Province Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['State'], 'geopointe__',' ')}</apex:column>
                
                <apex:column headerValue="Postal Code Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['Postal'], 'geopointe__',' ')}</apex:column>
                
                <!--<apex:column headerValue="Country Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['Country'], 'geopointe__',' ')}</apex:column>-->
                
                <apex:column rendered="{!NOT(umo.mo.IsReferenceMapObject)}">
                    <apex:facet name="header">On-Record<br/>Geocoding</apex:facet>
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! umo.mo.UsesOnRecordGeocoding }" />
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! NOT(umo.mo.UsesOnRecordGeocoding) }" />
                </apex:column>
                
                <apex:column rendered="{!NOT(umo.mo.IsReferenceMapObject)}">
                    <apex:facet name="header">Custom<br/>Lat/Lon Fields</apex:facet>
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! umo.mo.UsesCustomLatLngFields }" />
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! NOT(umo.mo.UsesCustomLatLngFields) }" />
                </apex:column>
                
                <!--
                <apex:column headerValue="Has Filter" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{!umo.mo.MapObjectFilter != ''}" />
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{!umo.mo.MapObjectFilter == ''}" />
                </apex:column>
                -->
                
                <apex:column headerValue="Last Geocode" value=" {!umo.mo.LastGeocodeBatchRun}" rendered="{!NOT(umo.mo.IsReferenceMapObject)}"/>
                                
                <apex:column headerValue="Batch Geocode" rendered="{!AND(NOT(umo.mo.IsReferenceMapObject), NOT(umo.mo.isExternalObject))}">
                    <apex:outputPanel rendered="{!umo.mo.isActive}">
                        <apex:commandLink value="All" action="{!runBatchGeocode}">
                            <apex:param name="sobj_batchGeo_All_MO" value="{!umo.mo.Name}" assignTo="{!mapObjectForGeocoding}"/>
                            <apex:param name="sobj_batchGeo_All_delta" value="false" assignTo="{!performDeltaGeocode}"/>
                        </apex:commandLink>
                        <apex:outputText value=" | "/>
                        <apex:commandLink value="Delta" action="{!runBatchGeocode}">
                            <apex:param name="sobj_batchGeo_Delta_MO" value="{!umo.mo.Name}" assignTo="{!mapObjectForGeocoding}"/>
                            <apex:param name="sobj_batchGeo_Delta_delta" value="true" assignTo="{!performDeltaGeocode}"/>
                        </apex:commandLink>
                    </apex:outputPanel>
                </apex:column>
                
                <apex:column colspan="10" style="padding-left: 50px;" rendered="{!umo.mo.IsReferenceMapObject}">
                    <b>This Map Object references the <u>{!umo.fieldData['ReferencedMapObject']}</u> Map Object</b>
                </apex:column>
                
            </apex:pageblockTable>
        </apex:pageBlock>
        <apex:outputPanel id="MapObjectsInvalid">
            <apex:pageBlock title="Invalid Map Objects" rendered="{!UberMapObjectsCount > 0}" helpTitle="Learn more about Map Objects" helpUrl="http://help.geopointe.com/customer/portal/articles/1811024-map-objects">
                
                <apex:panelGrid columns="2" styleClass="setupTabInfo">
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                    <apex:outputPanel >
                        These Map Objects must be edited and have any issues fixed before they can be activated.
                    </apex:outputPanel>
                </apex:panelGrid>
                
                <apex:pageblockTable value="{!UberMapObjectsInvalid}" var="umo" rowClasses="odd,even" styleClass="sortable">
                    
                    <apex:column headerValue="Action" style="font-weight:bold" headerClass="sorttable_nosort">
                        <apex:outputPanel >
                            
                            <apex:outputPanel >
                                <apex:commandLink value="Edit" action="{!object_edit}">
                                    <apex:param value="{!umo.mo.Name}" assignTo="{!SelectedEntity}" name="sobj"/>
                                </apex:commandLink>
                            </apex:outputPanel>
                            
                            <apex:outputPanel >
                                &nbsp;|&nbsp;
                                <apex:commandLink value="Delete" action="{!object_delete}" rerender="MapObjects, MapObjectsInvalid"
                                onclick="if(confirm('Are you sure you wish to delete this record? Deleting a Map Object will disallow this object from being mapped at all. If you think you might wish to map this object again, it is recommended to leave it as Inactive rather than deleting it.')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                                oncomplete="geopointeAjaxEnd();">
                                    <apex:param value="{!umo.mo.Name}" assignTo="{!SelectedEntity}" name="sobjd"/>
                                </apex:commandLink>
                            </apex:outputPanel>
                            
                        </apex:outputPanel>
                    </apex:column>
                    
                    <apex:column headerValue="Name">{!umo.mo.DisplayName}</apex:column>
                    <!--<apex:column headerValue="Reason">{!umo.mo.InvalidReason}</apex:column> -->
                    <!--<apex:column headerValue="API Name">{!SUBSTITUTE(umo.mo.Name,'geopointe__',' ')}</apex:column> Most people will never need this, maybe add back in future-->
                    <apex:column headerValue="Object">{!SUBSTITUTE(umo.mo.SObjectName,'geopointe__',' ')}</apex:column>
                    <apex:column headerValue="API Name">{!umo.mo.Name}</apex:column>

                    <apex:column headerValue="Street Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['Street'], 'geopointe__',' ')}</apex:column>
                    
                    <apex:column headerValue="City Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['City'], 'geopointe__',' ')}</apex:column>
                    
                    <apex:column headerValue="State/Province Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['State'], 'geopointe__',' ')}</apex:column>
                    
                    <apex:column headerValue="Postal Code Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['Postal'], 'geopointe__',' ')}</apex:column>
                    
                    <!--<apex:column headerValue="Country Field" rendered="{!NOT(umo.mo.IsReferenceMapObject)}">{!SUBSTITUTE(umo.fieldData['Country'], 'geopointe__',' ')}</apex:column>-->
                    
                    <apex:column rendered="{!NOT(umo.mo.IsReferenceMapObject)}">
                        <apex:facet name="header">On-Record<br/>Geocoding</apex:facet>
                        <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! umo.mo.UsesOnRecordGeocoding }" />
                        <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! NOT(umo.mo.UsesOnRecordGeocoding) }" />
                    </apex:column>
                    
                    <apex:column rendered="{!NOT(umo.mo.IsReferenceMapObject)}">
                        <apex:facet name="header">Custom<br/>Lat/Lon Fields</apex:facet>
                        <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! umo.mo.UsesCustomLatLngFields }" />
                        <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! NOT(umo.mo.UsesCustomLatLngFields) }" />
                    </apex:column>
                    
                    <apex:column colspan="10" style="padding-left: 50px;" rendered="{!umo.mo.IsReferenceMapObject}">
                        <b>This Map Object references the <u>{!umo.fieldData['ReferencedMapObject']}</u> Map Object</b>
                    </apex:column>
                    
                </apex:pageblockTable>
            </apex:pageBlock>
        </apex:outputPanel>
    </div>

<!--
        <div id="tab-dataSets">
        <!- - Data Sets - ->
        <apex:pageBlock title="Data Sets" id="DataSets" helpTitle="Learn more about Data Sets" helpUrl="http://help.geopointe.com/customer/portal/articles/1798873-data-sets">
            
            <apex:panelGrid columns="2" styleClass="setupTabInfo">
                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                <apex:outputPanel>
                    Data Sets are similar to reports. They are a predifined list of fields and filters users can select from when searching a map.<br />
                    Data Sets are created and edited from the Map page.
                </apex:outputPanel>
            </apex:panelGrid>
            
            <apex:pageblockTable value="{!DataSets}" var="ds" rowClasses="odd,even" styleClass="sortable">
                <apex:column headerValue="{!$Label.Action}" style="font-weight:bold" headerClass="sorttable_nosort">
                    <apex:outputPanel >
                    
                        <apex:outputPanel rendered="{!NOT(ds.status =='Active')}">
                            <apex:commandLink value="{!$Label.Activate}" reRender="DataSets" action="{!DataSet_statusUpdate}" onclick="geopointeAjaxStart('body','Activating...');" oncomplete="geopointeAjaxEnd();">
                                <apex:param value="Active" assignTo="{!setTo}" name="dsd_active"/>
                                <apex:param value="{!ds.id}" assignTo="{!SelectedEntityId}" name="dsd"/>
                            </apex:commandLink> 
                        </apex:outputPanel>
                        
                        <apex:outputPanel rendered="{!ds.status =='Active'}">
                            <apex:commandLink value="{!$Label.Deactivate}" action="{!DataSet_statusUpdate}" rerender="DataSets"
                            onclick="if(confirm('{!$Label.Data_Set_Deactive_Confirm}')){geopointeAjaxStart('body','Deactivating...');}else{return false}"
                            oncomplete="geopointeAjaxEnd();">
                                <apex:param value="Inactive" assignTo="{!setTo}" name="ds_inactive"/>
                                <apex:param value="{!ds.id}" assignTo="{!SelectedEntityId}" name="dsd"/> 
                            </apex:commandLink>
                        </apex:outputPanel>
                        
                        <apex:outputPanel >
                            &nbsp;|&nbsp;
                            <apex:commandLink value="{!$Label.Delete}" action="{!DataSet_delete}" rerender="DataSets"
                            onclick="if(confirm('{!$Label.Data_Set_Delete_Confirm}')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                            oncomplete="geopointeAjaxEnd();">
                                <apex:param value="{!ds.id}" assignTo="{!SelectedEntityId}" name="dsd"/>
                            </apex:commandLink>
                        </apex:outputPanel>
                        
                    </apex:outputPanel>
                </apex:column>
                <apex:column headerValue="{!$Label.Data_Set_Name}" value="{!ds.name}"/>
                <apex:column headerValue="{!$Label.Folder}" value="{!ds.folderName}"/>
                <apex:column headerValue="{!$Label.Map_Object}">{!SUBSTITUTE(ds.mapObjectDisplayName, 'geopointe__',' ')}</apex:column>
                <apex:column headerValue="{!$Label.Active}">
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! ds.status = 'Active' }" />
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! ds.status != 'Active' }" />
                </apex:column>
                <!- -<apex:column headerValue="{!$Label.Color_Markers_By}" value="{!ds.colorMarkersByFieldName}"/>
                <apex:column headerValue="{!$Label.Available_in_Maps}" value="{!ds.availableInMaps}"/>
                <apex:column headerValue="{!$Label.Available_in_Visualize}" value="{!ds.availableInVisualize}"/>
                <apex:column headerValue="{!$Label.One_Column_Address}" value="{!ds.oneColumnAddress}"/>
                <apex:column headerValue="{!$Label.Show_Filter}">
                    <apex:outputPanel rendered="{!ds.showFilter == 'my'}">My Records</apex:outputPanel>
                    <apex:outputPanel rendered="{!ds.showFilter == 'all'}">All Records</apex:outputPanel>
                    <apex:outputPanel rendered="{!ds.showFilter == 'acctteams'}">On Account Team</apex:outputPanel>
                </apex:column>- ->
                <apex:column headerValue="{!$Label.Unique_Id}" value="{!ds.dataSetIdentifier}" rendered="{!NOT(ISNULL($CurrentPage.parameters.debug))}"/>
                <!- -<apex:column headerValue="{!$Label.Color}"><div style="background-color: #{!JSENCODE(ds.color)}; width: 15px; height: 15px;"> </div></apex:column>- ->
            </apex:pageblockTable>
        </apex:pageBlock>
    </div>
-->

    <div id="tab-actions">
        <!-- Actions -->
        <apex:pageBlock title="Actions" helpTitle="Learn more about Actions" helpUrl="http://help.geopointe.com/customer/portal/articles/1809592-actions" id="actionsPageBlock">
            <apex:pageBlockButtons location="top">
                <a class="btn gpLinkButtonClassic" href="/apex/{!namespacePrefix}s_Action_edit?retURL=%2Fapex%2Fs_Main%3Ftab%3Dtab-actions">New Action</a>
            </apex:pageBlockButtons>  

            <apex:panelGrid columns="2" styleClass="setupTabInfo">
                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                <apex:outputPanel >
                    Actions allow you to attach custom logic to individual records and points on a map or the results of an entire search. These can be links that open up external pages,
                    Visualforce pages, or even execute Apex code.
                </apex:outputPanel>
            </apex:panelGrid>

            <apex:pageBlockSection title="Point Actions" collapsible="false" columns="1">
                <apex:pageBlockSectionItem >    
                    <apex:outputPanel >
                        On the Map page these are actions that can be applied to an individual point. These points could be a record from a Data Set search, a POI from a places search, 
                        or any location on the map accessed with a right click or hold.<br/><br/>

                        <apex:pageBlockTable value="{!recordActions}" var="a" id="recordActionsTable">
                            <apex:column headerValue="Action" style="font-weight:bold;" width="285px">
                                <apex:outputLink value="/apex/{!namespacePrefix}s_Action_edit?retURL=%2Fapex%2Fs_Main%3Ftab%3Dtab-actions&id={!a.id}">Edit</apex:outputLink>

                                <apex:outputPanel rendered="{!showActionUserAccess}">
                                    &nbsp;|&nbsp;
                                    <apex:outputLink value="{!URLFOR($Action.Action__c.Share, a.Id)}">User Access</apex:outputLink>
                                </apex:outputPanel>

                                <apex:outputPanel rendered="{!a.geopointe__Standard_Action__c == ''}">
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="Delete" action="{!deleteAction}" rerender="actionsPageBlock" 
                                    onclick="if(confirm('This will permanently DELETE the Action: {!JSENCODE(a.Name)}')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                                    oncomplete="geopointeAjaxEnd();">
                                        <apex:param value="{!a.Id}" assignTo="{!actionIdForDML}" name="actionIdForDML"/>
                                    </apex:commandLink>
                                </apex:outputPanel>
                        
                                <apex:outputPanel rendered="{!a.geopointe__Standard_Action__c == ''}">
                                    |&nbsp;
                                    <apex:outputLink value="/apex/{!namespacePrefix}s_Action_edit?retURL=%2Fapex%2Fs_Main%3Ftab%3Dtab-actions&id={!a.id}&clone=1">Clone</apex:outputLink>
                                </apex:outputPanel>

                                <!-- Hidden element used to update sort order -->
                                <span class="hiddenId" style="display:none;" data-id="{!a.Id}"/>
                            </apex:column>
                            <apex:column headerValue="Order" width="135px" styleClass="actionSortCol">
                                <a href="#"><apex:image url="/s.gif" alt="Top" styleClass="doubleArrowUp" title="Top"/></a>
                                <a href="#"><apex:image url="/s.gif" alt="Up" styleClass="upArrowIcon" title="Up"/></a>
                                <a href="#"><apex:image url="/s.gif" alt="Down" styleClass="downArrowIcon" title="Down"/></a>   
                                <a href="#"><apex:image url="/s.gif" alt="Bottom" styleClass="doubleArrowDwn" title="Bottom"/></a>
                            </apex:column>
                            <apex:column value="{!a.Name}"/>
                            <apex:column value="{!a.geopointe__Available_Web__c}"/>
                            <apex:column value="{!a.geopointe__Available_SF1__c}"/>
                            <apex:column value="{!a.geopointe__Point_Type__c}"/>
                            <apex:column value="{!a.geopointe__Display_Type__c}"/>
                            <apex:column value="{!a.geopointe__Action_Type__c}"/>
                            <apex:column value="{!a.geopointe__Behavior__c}"/>
                            <apex:column value="{!a.geopointe__Map_Objects__c}"/>
                            <apex:column value="{!a.geopointe__Apex_Class__c}"/>
                            <apex:column headerValue="Custom">
                                <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{!a.geopointe__Standard_Action__c == ''}" />
                                <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{!a.geopointe__Standard_Action__c != ''}" />
                            </apex:column>
                        </apex:pageBlockTable>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem> 
            </apex:pageBlockSection>  

            <apex:pageBlockSection title="List Actions" collapsible="false" columns="1">
                <apex:pageBlockSectionItem >    
                    <apex:outputPanel >
                        On the Map page these List Actions can be accessed with the "Actions" button under the map on the right side. 
                        These actions can process all the records returned in a search.<br/><br/>

                        <apex:pageBlockTable value="{!listActions}" var="a" id="listActionsTable" >
                            <apex:column headerValue="Action" style="font-weight:bold;" width="285px">
                                <apex:outputLink value="/apex/{!namespacePrefix}s_Action_edit?retURL=%2Fapex%2Fs_Main%3Ftab%3Dtab-actions&id={!a.id}">Edit</apex:outputLink>&nbsp;|&nbsp;

                                <apex:outputPanel rendered="{!showActionUserAccess}">
                                    <apex:outputLink value="{!URLFOR($Action.Action__c.Share, a.Id)}">User Access</apex:outputLink>
                                </apex:outputPanel>

                                <apex:outputPanel rendered="{!a.geopointe__Standard_Action__c == ''}">
                                    &nbsp;|&nbsp;
                                    <apex:commandLink value="Delete" action="{!deleteAction}" rerender="actionsPageBlock" 
                                    onclick="if(confirm('This will permanently DELETE the Action: {!JSENCODE(a.Name)}')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                                    oncomplete="geopointeAjaxEnd();">
                                        <apex:param value="{!a.Id}" assignTo="{!actionIdForDML}" name="actionIdForDML"/>
                                    </apex:commandLink>
                                </apex:outputPanel> 

                                <apex:outputPanel rendered="{!a.geopointe__Standard_Action__c == ''}">
                                    |&nbsp;
                                    <apex:outputLink value="/apex/{!namespacePrefix}s_Action_edit?retURL=%2Fapex%2Fs_Main%3Ftab%3Dtab-actions&id={!a.id}&clone=1">Clone</apex:outputLink>
                                </apex:outputPanel>

                                <!-- Hidden element used to update sort order -->
                                <span class="hiddenId" style="display:none;" data-id="{!a.Id}"/>
                            </apex:column>
                            <apex:column headerValue="Order" width="135px" styleClass="actionSortCol">
                                <a href="#"><apex:image url="/s.gif" alt="Top" styleClass="doubleArrowUp" title="Top"/></a>
                                <a href="#"><apex:image url="/s.gif" alt="Up" styleClass="upArrowIcon" title="Up"/></a>
                                <a href="#"><apex:image url="/s.gif" alt="Down" styleClass="downArrowIcon" title="Down"/></a>   
                                <a href="#"><apex:image url="/s.gif" alt="Bottom" styleClass="doubleArrowDwn" title="Bottom"/></a>
                            </apex:column>
                            <apex:column value="{!a.Name}"/>
                            <apex:column value="{!a.geopointe__Available_Web__c}"/>
                            <apex:column value="{!a.geopointe__Action_Type__c}"/>
                            <apex:column value="{!a.geopointe__Map_Objects__c}"/>
                            <apex:column value="{!a.geopointe__Apex_Class__c}"/>
                            <apex:column headerValue="Custom">
                                <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{!a.geopointe__Standard_Action__c == ''}" />
                                <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{!a.geopointe__Standard_Action__c != ''}" />
                            </apex:column>
                        </apex:pageBlockTable>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem> 
            </apex:pageBlockSection>  
        </apex:pageBlock>
    </div>

    <div id="tab-mapStyles">
        <!-- Map Styles -->
        <apex:pageBlock title="Map Styles" id="mapStylesPageBlock">
            <apex:pageBlockButtons location="top">
                <a class="btn gpLinkButtonClassic" href="/apex/{!namespacePrefix}s_Map_Style_edit?retURL=%2Fapex%2Fs_main%3Ftab%3Dtab-actions">New Map Style</a>
            </apex:pageBlockButtons>

            <apex:panelGrid columns="2" styleClass="setupTabInfo">
                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                <apex:outputPanel >
                    Map Styles allow you import custom Google Maps styles in JSON format and apply them to the map. The custom styles can be accesed from the drop down menu on the map in the top right corner. See examples at&nbsp;<apex:outputLink value="https://snazzymaps.com/" target="_blank">Snazzy Maps</apex:outputLink>.
                </apex:outputPanel>
            </apex:panelGrid>

            <apex:pageBlockTable value="{!mapStyles}" var="style" id="mapStyleTable" >
                <apex:column headerValue="Style" style="font-weight:bold;" width="285px">
                    <apex:outputLink value="/apex/{!namespacePrefix}s_Map_Style_edit?id={!style.id}&retURL=%2Fapex%2Fs_main%3Ftab%3Dtab-actions">Edit</apex:outputLink>

                    <apex:outputPanel rendered="{!showMapStyleUserAccess}">
                        &nbsp;|&nbsp;
                        <apex:outputLink value="{!URLFOR($Action.GP_Map_Style__c.Share, style.Id)}">User Access</apex:outputLink>
                    </apex:outputPanel>

                    <apex:outputPanel >
                        &nbsp;|&nbsp;
                        <apex:commandLink value="Delete" action="{!deleteMapStyle}" rerender="mapStyleTable" 
                        onclick="if(confirm('This will permanently DELETE the Map Style: {!JSENCODE(style.Name)}')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                        oncomplete="geopointeAjaxEnd();">
                            <apex:param value="{!style.Id}" assignTo="{!mapStyleIdForDML}" name="mapStyleIdForDML"/>
                        </apex:commandLink>
                    </apex:outputPanel> 
                </apex:column>
                
                <apex:column value="{!style.Name}"/>
            </apex:pageBlockTable>
        </apex:pageBlock>
    </div>

    <!-- <div id="tab-layers">
        <apex:pageBlock title="KML Layers" helpTitle="Learn more about Layers" helpUrl="http://help.geopointe.com/customer/portal/articles/1811006-layers" id="layersPageBlock">
            <apex:pageBlockButtons location="top" rendered="{!orgSettings.settings.geopointe__Mapping_Provider__c == 'Google'}">
                <a class="btn gpLinkButtonClassic" href="/apex/s_Layer_edit?retURL=%2Fapex%2Fs_main%3Ftab%3Dtab-layers">New Layer</a>
            </apex:pageBlockButtons>
            
            <apex:panelGrid columns="2" styleClass="setupTabInfo">
                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                <apex:outputPanel>
                    KML Layers are KML, KMZ, or GEORSS files that can be added to the map. 
                </apex:outputPanel>
            </apex:panelGrid>

            <apex:outputPanel rendered="{!orgSettings.settings.Mapping_Provider__c != 'Google'}">
                <apex:pageMessage severity="info" escape="false" >
                    The KML Layers feature is only supported when Google Maps is the mapping provider. 
                    Please contact <a href="mailto:help@geopointe.com?subject=Change Mapping Provider to Google" target="_blank">help@geopointe.com</a> 
                    to start the process of changing mapping providers.
                </apex:pageMessage>
            </apex:outputPanel>

            <apex:outputPanel rendered="{!orgSettings.settings.geopointe__Mapping_Provider__c == 'Google'}">
                <apex:pageblockTable value="{!layers}" var="l" rendered="{!layers.size > 0}" styleClass="sortable">
                    <apex:column headerValue="Action" style="font-weight:bold;" width="285px">
                        
                        <apex:outputLink value="/apex/s_Layer_edit?id={!l.id}&retURL=%2Fapex%2Fs_main%3Ftab%3Dtab-layers">Edit</apex:outputLink>&nbsp;|&nbsp;

                        <apex:outputPanel rendered="{!showLayerUserAccess}">
                            <apex:outputLink value="{!URLFOR($Action.Layer__c.Share, l.Id)}">User Access</apex:outputLink>&nbsp;|&nbsp;
                        </apex:outputPanel>
                        
                        <apex:commandLink rendered="{!NOT(l.Active__c)}" value="Activate" action="{!setLayerActiveValue}" rerender="layersPageBlock" 
                        onclick="geopointeAjaxStart('body','Activating...');" oncomplete="geopointeAjaxEnd();">
                            <apex:param value="true" assignTo="{!layerActiveValue}" name="layerActiveValue"/> 
                            <apex:param value="{!l.Id}" assignTo="{!layerIdForDML}" name="layerIdForDML"/> 
                        </apex:commandLink>

                        <apex:commandLink rendered="{!l.Active__c}" value="Deactivate" action="{!setLayerActiveValue}" rerender="layersPageBlock" 
                        onclick="geopointeAjaxStart('body','Deactivating...');" oncomplete="geopointeAjaxEnd();">
                            <apex:param value="false" assignTo="{!layerActiveValue}" name="layerActiveValue"/>
                            <apex:param value="{!l.Id}" assignTo="{!layerIdForDML}" name="layerIdForDML"/>
                        </apex:commandLink>

                        &nbsp;|&nbsp;
                        <apex:commandLink  value="Delete" action="{!deleteLayer}" rerender="layersPageBlock" 
                        onclick="if(confirm('This will permanently DELETE the Layer: {!JSENCODE(l.Name)}')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                        oncomplete="geopointeAjaxEnd();">
                            <apex:param value="{!l.Id}" assignTo="{!layerIdForDML}" name="layerIdForDML"/>
                        </apex:commandLink>
                    </apex:column>

                    <apex:column value="{!l.Name}"/>
                    <apex:column value="{!l.Description__c}"/>
                    <apex:column value="{!l.URL__c}"/>
                    <apex:column value="{!l.Active__c}"/>
                </apex:pageblockTable>

                <apex:outputText escape="false" rendered="{!layers == 0}">
                    There are currently no KML Layers.
                </apex:outputText>
            </apex:outputPanel>
        </apex:pageBlock>
    </div> -->

    <div id="tab-assignmentPlans">
        <!-- Assignment Plans -->
        <apex:pageBlock title="Geographic Assignment Plans" helpTitle="Learn more about Geographic Assignment Plans" helpUrl="http://help.geopointe.com/customer/portal/articles/1924073" id="apPagBlock">
            
            <apex:pageBlockButtons location="top">
                <a class="btn gpLinkButtonClassic" href="/apex/{!namespacePrefix}s_AssignmentPlan?retURL=%2Fapex%2Fs_main%3Ftab%3Dtab-assignmentPlans">New Assignment Plan</a>
            </apex:pageBlockButtons>

            <apex:panelGrid columns="2" styleClass="setupTabInfo">
                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                <apex:outputPanel >
                    Assignment Plans define how you want mappable object records to be assigned to geographic areas.
                </apex:outputPanel>
            </apex:panelGrid>
            
            <div style="font-size: 125%;margin-top:10px;margin-bottom:7px">Assignment Area Licenses: {!assignmentAreaLicensesInUse}</div>
            <apex:pageblockTable value="{!plans}" var="ap" rowClasses="odd,even" rendered="{!plans.size > 0}" styleClass="sortable">
                <apex:column headerValue="Action" style="font-weight:bold;" width="170px">
                    
                    <apex:outputLink value="/apex/{!namespacePrefix}s_AssignmentPlan?id={!ap.id}&retURL=%2Fapex%2Fs_main%3Ftab%3Dtab-assignmentPlans">Edit</apex:outputLink>

                    &nbsp;&nbsp;|&nbsp;&nbsp;
                    <apex:commandLink rendered="{!ap.Status!='Active'}" value="Activate" action="{!assignmentplan_statusUpdate}" rerender="apPagBlock, pageMessages" 
                    onclick="geopointeAjaxStart('body','Activating...');" oncomplete="geopointeAjaxEnd();">
                        <apex:param value="Active" assignTo="{!apStatusValue}" name="apStatusValue"/> 
                        <apex:param value="{!ap.Id}" assignTo="{!planId}" name="planId"/> 
                    </apex:commandLink>

                    <apex:commandLink rendered="{!ap.Status=='Active'}" value="Deactivate" action="{!assignmentplan_statusUpdate}" rerender="apPagBlock, pageMessages" 
                    onclick="if(confirm('{!$Label.geopointe__assignment_plan_deactive_confirm}')){geopointeAjaxStart('body','Deactivating...');}else{return false}" oncomplete="geopointeAjaxEnd();">
                        <apex:param value="Inactive" assignTo="{!apStatusValue}" name="apStatusValue"/>
                        <apex:param value="{!ap.Id}" assignTo="{!planId}" name="planId"/>
                    </apex:commandLink>

                    &nbsp;&nbsp;|&nbsp;&nbsp;
                    <apex:commandLink value="Delete" action="{!assignmentplan_delete}" rerender="apPagBlock" 
                    onclick="if(confirm('This will permanently DELETE the Assignment Plan: {!JSENCODE(ap.Name)}')){geopointeAjaxStart('body','Deleting...');}else{return false}"
                    oncomplete="geopointeAjaxEnd();">
                        <apex:param value="{!ap.Id}" assignTo="{!planId}" name="planId"/>
                    </apex:commandLink>
                
                </apex:column>
                <apex:column headerValue="Assignment Plan Name" value="{!ap.name}"/>
                <apex:column headerValue="Map Object" value="{!ap.MapObjectLabel}"/>
                <apex:column >
                    <apex:facet name="header"># Areas</apex:facet>
                    <apex:outputText rendered="{!ap.Status = 'Active'}"  value="{!ap.numAreas}"/>
                    <apex:outputText rendered="{!ap.Status != 'Active'}" value="{!ap.numAreas}" style="color:#999"/>
                </apex:column>
                <apex:column headerValue="Active">
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! ap.Status = 'Active' }" />
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! ap.Status != 'Active' }" />
                </apex:column>
                <apex:column headerValue="Reassign Owner">
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_checked.gif')}" rendered="{! ap.ReassignOwner }" />
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/checkbox_unchecked.gif')}" rendered="{! NOT(ap.ReassignOwner) }" />
                </apex:column>
                <apex:column headerValue="Custom Assignment Field" value="{!ap.CustomAssignmentFieldLabel}"/>
                <apex:column headerValue="Custom Assignment Object" value="{!ap.CustomAssignmentObjectLabel}"/>
                <apex:column headerValue="Description" value="{!ap.Description}"/>
                <apex:column headerValue="Batch Assign">
                    <apex:outputPanel rendered="{! ap.Status = 'Active' }">
                        <apex:commandLink value="All" action="{!runAssignmentPlan}">
                            <apex:param value="{!ap.Id}" assignTo="{!planId}" name="planId"/> 
                            <apex:param value="false" assignTo="{!performDeltaAssignment}" name="performDeltaAssignment"/> 
                        </apex:commandLink>
                        <apex:outputText value=" | "/>
                        <apex:commandLink value="Delta" action="{!runAssignmentPlan}">
                            <apex:param value="{!ap.Id}" assignTo="{!planId}" name="planId"/> 
                            <apex:param value="true" assignTo="{!performDeltaAssignment}" name="performDeltaAssignment"/> 
                        </apex:commandLink>
                    </apex:outputPanel>
                </apex:column>
            </apex:pageblockTable>
        </apex:pageBlock>
    </div>

    <div id="tab-batchJobs">
        <!-- Scheduled Jobs -->
        <apex:pageBlock title="Scheduled Jobs" helpTitle="Learn more about the Geocoder" helpUrl="http://help.geopointe.com/customer/portal/articles/1811022-the-geocoder" id="scheduledJobsPageBlock">
            <apex:outputPanel layout="block" style="margin: 3px 30% 3px 30px; padding: 3px;">
                <apex:panelGrid columns="2">
                    <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                    <apex:outputText value="Schedule Geopointe jobs to run in the background to improve your experience and to relieve you of manual work. Use the list below to manage Geopointe job schedules." />
                </apex:panelGrid>
            </apex:outputPanel>
            <apex:outputPanel id="batchjob_schedules">
                <apex:pageblockTable value="{!schedules}" var="s" rowClasses="odd,even" styleClass="sortable">
                    <apex:column headerValue="Action" style="font-weight:bold;" width="270px">
                        
                        <apex:commandLink rendered="{!NOT(s.isScheduled) && s.scheduleName != 'Geopointe Thematic Map Sync' && s.scheduleName != 'Geopointe Assignment Plans'}" 
                        value="Schedule {!s.scheduleShortName}" action="{!rescheduleApexJob}" rerender="scheduledJobsPageBlock, pageMessages" 
                        onclick="geopointeAjaxStart('body','Scheduling Job...');" oncomplete="geopointeAjaxEnd();">
                            <apex:param value="{!s.scheduleName}" assignTo="{!jobName}" name="jobName"/> 
                        </apex:commandLink>

                        <apex:outputPanel rendered="{!s.scheduleName == 'Geopointe Assignment Plans' && NOT(s.isScheduled)}">
                            <apex:commandLink value="Schedule AP Daily" action="{!rescheduleApexJob}" rerender="scheduledJobsPageBlock, pageMessages" 
                            onclick="geopointeAjaxStart('body','Scheduling Job...');" oncomplete="geopointeAjaxEnd();">
                                <apex:param value="{!s.scheduleName}" assignTo="{!jobName}" name="jobName"/> 
                                <apex:param value="d" assignTo="{!jobFreq}" name="jobFreqWeekly"/> 
                            </apex:commandLink>
                            &nbsp;&nbsp;|&nbsp;&nbsp;
                            <apex:commandLink value="Schedule AP Hourly" action="{!rescheduleApexJob}" rerender="scheduledJobsPageBlock, pageMessages" 
                            onclick="geopointeAjaxStart('body','Scheduling Job...');" oncomplete="geopointeAjaxEnd();">
                                <apex:param value="{!s.scheduleName}" assignTo="{!jobName}" name="jobName"/> 
                                <apex:param value="h" assignTo="{!jobFreq}" name="jobFreqWeekly"/> 
                            </apex:commandLink>
                        </apex:outputPanel>

                        <apex:outputPanel rendered="{!s.scheduleName == 'Geopointe Thematic Map Sync' && orgSettings.settings.geopointe__Thematic_Maps_Enabled__c && NOT(s.isScheduled)}">
                            <apex:commandLink value="Schedule Sync Weekly" action="{!rescheduleApexJob}" rerender="scheduledJobsPageBlock, pageMessages" 
                            onclick="geopointeAjaxStart('body','Scheduling Job...');" oncomplete="geopointeAjaxEnd();">
                                <apex:param value="{!s.scheduleName}" assignTo="{!jobName}" name="jobName"/> 
                                <apex:param value="w" assignTo="{!jobFreq}" name="jobFreqWeekly"/> 
                            </apex:commandLink>
                            &nbsp;&nbsp;|&nbsp;&nbsp;
                            <apex:commandLink value="Schedule Sync Daily" action="{!rescheduleApexJob}" rerender="scheduledJobsPageBlock, pageMessages" 
                            onclick="geopointeAjaxStart('body','Scheduling Job...');" oncomplete="geopointeAjaxEnd();">
                                <apex:param value="{!s.scheduleName}" assignTo="{!jobName}" name="jobName"/> 
                                <apex:param value="d" assignTo="{!jobFreq}" name="jobFreqWeekly"/> 
                            </apex:commandLink>
                        </apex:outputPanel>

                        <apex:commandLink action="{!goToEnableThematics}" value="[ Enable Thematic Maps ]" rendered="{!s.scheduleName == 'Geopointe Thematic Map Sync' && NOT(orgSettings.settings.geopointe__Thematic_Maps_Enabled__c)}">
                            <apex:param value="tab-batchJobs" assignTo="{!enableReturn}" name="enableReturn"/>
                        </apex:commandLink>

                        <apex:commandLink rendered="{!s.isScheduled}" value="Cancel {!s.scheduleShortName}" action="{!unscheduleApexJob}" rerender="scheduledJobsPageBlock, pageMessages" 
                        onclick="geopointeAjaxStart('body','Cancelling Job...');" oncomplete="geopointeAjaxEnd();">
                            <apex:param value="{!s.scheduleID}" assignTo="{!jobIdToCancel}" name="jobIdToCancel"/>
                            <apex:param value="{!s.scheduleName}" assignTo="{!jobName}" name="jobName"/>
                        </apex:commandLink>

                        <apex:outputPanel rendered="{!s.scheduleName == 'Geopointe Geocoder'}">
                        &nbsp;&nbsp;|&nbsp;&nbsp;
                        <apex:commandLink value="Run Cleanup" action="{!runCleanupJob}" rerender="scheduledJobsPageBlock" 
                        onclick="geopointeAjaxStart('body','Starting Cleanup...');" oncomplete="geopointeAjaxEnd();">
                            <apex:param value="{!s.scheduleName}" assignTo="{!jobName}" name="jobName"/> 
                        </apex:commandLink>
                        </apex:outputPanel>
                            
                    </apex:column>
                    <apex:column headerValue="Job Name" value="{!s.scheduleName}"/>
                    <apex:column headerValue="Job Description" width="37%" value="{!s.scheduleDescription}"/>
                    <!--<apex:column headerValue="Status" value="{!s.scheduleStatus}"/>-->
                    <apex:column headerValue="Frequency" value="{!s.scheduleFrequency}"/>
                    <apex:column headerValue="Submitted By" value="{!s.submittedBy}"/>
                    <apex:column headerValue="Last Run" value="{!s.lastScheduledRun}"/>
                    <apex:column headerValue="Next Run" value="{!s.nextScheduledRun}"/>
                    <apex:column headerValue="Schedule Id" value="{!s.scheduleID}" rendered="{!NOT(ISNULL($CurrentPage.parameters.debug))}"/>
                </apex:pageblockTable>
            </apex:outputPanel>
        </apex:pageBlock>
        
        <!-- Current & Recently Completed Jobs -->
        <apex:pageBlock title="Current & Recently Completed Batch Jobs" id="batchJobList">
            <apex:pageBlockButtons location="top">
                <apex:commandButton value="Refresh" rerender="batchJobList" onclick="geopointeAjaxStart('body','Refreshing Batch Job List...');" oncomplete="geopointeAjaxEnd();"/>
            </apex:pageBlockButtons>
            
            <apex:panelGrid columns="2" styleClass="setupTabInfo">
                <apex:image url="{!URLFOR($Resource.geopointe__images, '/info32.png')}" height="16px"/>
                <apex:outputPanel >
                    Below is a list of the batch jobs currently running as well as the 10 most recently completed batch jobs (<a href="/apexpages/setup/listAsyncApexJobs.apexp" target="_blank"><em>Monitor All Jobs</em></a>)
                </apex:outputPanel>
            </apex:panelGrid>

            <apex:pageblockTable value="{!apexBatchJobs}" var="job" rowClasses="odd,even" rendered="{!apexBatchJobsCount > 0}" styleClass="sortable">
                <apex:column headerValue="Job Type" value="{!job.apexClass}"/>
                <apex:column headerValue="Status" value="{!job.Status}"/>
                <apex:column headerValue="Total Items" value="{!job.TotalJobItems}"/>
                <apex:column headerValue="Processed Items" value="{!job.JobItemsProcessed}"/>
                <apex:column headerValue="Errored Items" value="{!job.NumberOfErrors}"/>
                <apex:column headerValue="Submitted" value="{!job.CreatedDate}"/>
                <apex:column headerValue="Completed" value="{!job.CompletedDate}"/>
                <apex:column headerValue="Running User" value="{!job.RunningUser}"/>
                <apex:column headerValue="Job Id" value="{!job.jobId}" rendered="{!NOT(ISNULL($CurrentPage.parameters.debug))}"/>
            </apex:pageblockTable>
            <apex:outputText rendered="{!apexBatchJobsCount == 0}">
                There are no Geopointe jobs currently running nor have any ever been run.
            </apex:outputText>
        </apex:pageBlock>
    </div>

	<div id="tab-fieldMapping">
		<apex:pageBlock title="Geopointe Data Layer" id="fieldMappingView">
			<apex:pageBlockSection title="Import Field Mapping" collapsible="false" columns="1"/>
			<apex:outputPanel id="selectFieldMap" rendered="{!selectFieldMapRendered}">
				<div class="pbHeader">
					<table border="0" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td class="pbTitle">&nbsp;</td>
								<td class="pbButton">
									<apex:commandButton action="{!newFieldMappingView}" value="New" reRender="fieldMappingView"/>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<apex:pageBlockTable value="{!objectMaps}" var="objectMap">
					<apex:column headerValue="Action" style="font-weight: bold">
						<apex:commandLink value="Edit" action="{!editFieldMappingView}" rerender="fieldMappingView">
							<apex:param value="{!objectMap.Id}" assignTo="{!fieldMappingSalesforceObjectId}" name="fieldMappingSalesforceObjectId"/>
						</apex:commandLink>
						&nbsp;|&nbsp;
						<apex:commandLink value="Delete" action="{!deleteFieldMapping}" rerender="fieldMappingView">
							<apex:param value="{!objectMap.Id}" assignTo="{!fieldMappingSalesforceObjectId}" name="fieldMappingSalesforceObjectId"/>
						</apex:commandLink>
					</apex:column>
					<apex:column headerValue="Name" value="{!objectMap.Name}"/>
					<apex:column headerValue="Geopointe Object" value="{!objectMap.geopointe__Geopointe_Object__c}"/>
					<apex:column headerValue="Salesforce Object" value="{!objectMap.geopointe__Sfdc_Object__c}"/>
				</apex:pageBlockTable>
				<div class="pbHeader">
					<table border="0" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td class="pbTitle">&nbsp;</td>
								<td class="pbButton">
									<apex:commandButton action="{!newFieldMappingView}" value="New" reRender="fieldMappingView"/>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</apex:outputPanel>
			<apex:outputPanel id="editFieldMap" rendered="{!editFieldMapRendered}">
			<div class="pbHeader">
				<table border="0" cellpadding="0" cellspacing="0">
					<tbody>
						<tr>
							<td class="pbTitle">&nbsp;</td>
							<td class="pbButton">
								<apex:commandButton action="{!saveFieldMapping}" value="Save" reRender="fieldMappingView"/>
								<apex:commandButton action="{!selectFieldMappingView}" value="Cancel" reRender="fieldMappingView"/>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			<table class="detailList" border="0" cellpadding="0" cellspacing="0">
				<tbody>
					<tr>
						<th class="labelCol vfLabelColTextWrap first" scope="row" style="border-bottom: none">
							<label>Name</label>
						</th>
						<td class="data2Col first" style="border-bottom: none">
							<div class="requiredInput">
								<div class="requiredBlock"></div>
								<apex:inputText value="{!fieldMappingSalesforceObject.Name}"/>
								<apex:outputPanel layout="block" styleClass="errorMsg" rendered="{!fieldMapSaveFailed && fieldMappingSalesforceObject.Name == ''}"><strong>Error:</strong> You must enter a value</apex:outputPanel>
							</div>
						</td>
					</tr>
					<tr>
						<th class="labelCol vfLabelColTextWrap" scope="row" style="border-bottom: none">
							<label>Geopointe Object</label>
						</th>
						<td class="data2Col" style="border-bottom: none">
							<div class="requiredInput">
								<div class="requiredBlock"></div>
								<apex:selectList value="{!fieldMappingSalesforceObject.geopointe__Geopointe_Object__c}" size="1">
									<apex:actionSupport event="onchange" action="{!setFieldMappingObjectType}" reRender="fieldMap, fieldMapDefaultValues, fieldMapObjectSelect"/>
									<apex:selectOption itemValue="" itemLabel="--None--"/>
									<apex:selectOption itemValue="Global Businesses" itemLabel="Global Businesses"/>
									<apex:selectOption itemValue="Global People" itemLabel="Global People"/>
								</apex:selectList>
								<apex:outputPanel layout="block" styleClass="errorMsg" rendered="{!fieldMapSaveFailed && fieldMappingSalesforceObject.geopointe__Geopointe_Object__c == ''}"><strong>Error:</strong> You must enter a value</apex:outputPanel>
							</div>
						</td>
					</tr>
					<tr>
						<th class="labelCol vfLabelColTextWrap" scope="row" style="border-bottom: none">
							<label>Salesforce Object</label>
						</th>
						<td class="data2Col" style="border-bottom: none">
							<div class="requiredInput">
								<div class="requiredBlock"></div>
								<apex:outputPanel id="fieldMapObjectSelect">
								<apex:inputText styleClass="salesforceObjectInput" value="{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c}" rendered="{!fieldMappingSalesforceObject.geopointe__Geopointe_Object__c != ''}" style="display: none"/>
									<apex:actionSupport event="onchange" action="{!setFieldMappingObjectFields}" reRender="fieldMap, fieldMapDefaultValues"/>
								<apex:outputPanel rendered="{!fieldMappingSalesforceObject.geopointe__Geopointe_Object__c != ''}">
								<select class="salesforceObjectSelect" size="1">
								</select>
								</apex:outputPanel>
								<script type="text/javascript">
									// manually set salesforce object options to bypass 1000 option limit
									var salesforceObjects = {!salesforceObjects};
									var selected = '{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c}';

									var options = salesforceObjects.map(function (salesforceObject) {
										return '<option value="' + salesforceObject[0] + '">' + salesforceObject[1] + '</option>';
									}).join('\n');

									jQuery('.salesforceObjectSelect').append(options);

									jQuery('.salesforceObjectSelect').val(selected);

									jQuery('.salesforceObjectSelect').change(function () {
										jQuery('.salesforceObjectInput').val(jQuery('.salesforceObjectSelect').val());
									})
								</script>
								<apex:outputPanel layout="block" styleClass="errorMsg" rendered="{!fieldMapSaveFailed && fieldMappingSalesforceObject.geopointe__Sfdc_Object__c == ''}"><strong>Error:</strong> You must enter a value</apex:outputPanel>
								</apex:outputPanel>
							</div>
						</td>
					</tr>
				</tbody>
			</table>
			<apex:outputPanel id="fieldMap">
				<apex:pageBlockTable value="{!fieldMappingObjectFields}" var="field" rendered="{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c != '' && fieldMappingSalesforceObject.geopointe__Geopointe_Object__c != ''}">
					<apex:column headerValue="Geopointe Field" value="{!field.geopointe__Geopointe_Field_Label__c}"/>
					<apex:column headerValue="{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c} Field">
						<div class="requiredInput">
							<apex:outputPanel layout="block" styleClass="requiredBlock" rendered="{!field.geopointe__Required__c}"></apex:outputPanel>
							<apex:selectList value="{!field.geopointe__Sfdc_Field__c}" size="1" rendered="{!field.geopointe__Geopointe_Field__c != 'id'}">
								<apex:selectOptions value="{!salesforceObjectFields}"/>
							</apex:selectList>
							<apex:selectList value="{!field.geopointe__Sfdc_Field__c}" size="1" rendered="{!field.geopointe__Geopointe_Field__c == 'id'}">
								<apex:selectOptions value="{!salesforceObjectStringFields}"/>
							</apex:selectList>
							<apex:outputPanel layout="block" styleClass="errorMsg" rendered="{!field.geopointe__Required__c && fieldMapSaveFailed && field.geopointe__Sfdc_Field__c == ''}"><strong>Error:</strong> You must enter a value</apex:outputPanel>
							<apex:outputPanel layout="block" styleClass="errorMsg" rendered="{!fieldMapSaveFailed && field.geopointe__Sfdc_Field__c == fieldMapDuplicate && fieldMapDuplicate != null}"><strong>Error:</strong> Duplicate fields are not allowed</apex:outputPanel>
						</div>
					</apex:column>
				</apex:pageBlockTable>
			</apex:outputPanel>
			<apex:outputPanel id="fieldMapDefaultValues">
				<apex:outputPanel layout="block" style="margin: 5px 0" rendered="{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c != '' && fieldMappingSalesforceObject.geopointe__Geopointe_Object__c != ''}">
					<b style="margin-right: 5px">Default Fields</b>
				</apex:outputPanel>
				<apex:pageBlockTable value="{!fieldMappingDefaultFields}" var="field" rendered="{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c != '' && fieldMappingSalesforceObject.geopointe__Geopointe_Object__c != ''}">
					<apex:column headerValue="Action" style="font-weight: bold">
						<apex:commandLink value="Delete" action="{!deleteDefaultField}" reRender="fieldMapDefaultValues">
							<apex:param value="{!field.geopointe__Order__c}" assignTo="{!fieldMappingDefaultIndexToDelete}" name="fieldMappingDefaultToDelete"/>
						</apex:commandLink>
					</apex:column>
					<apex:column headerValue="Value">
						<apex:inputText value="{!field.geopointe__Value__c}"/>
					</apex:column>
					<apex:column headerValue="{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c} Field">
						<apex:selectList value="{!field.geopointe__Sfdc_Field__c}" size="1">
							<apex:selectOptions value="{!salesforceObjectFields}"/>
						</apex:selectList>
						<apex:outputPanel layout="block" styleClass="errorMsg" rendered="{!fieldMapSaveFailed && field.geopointe__Sfdc_Field__c == fieldMapDuplicate && fieldMapDuplicate != null}"><strong>Error:</strong> Duplicate fields are not allowed</apex:outputPanel>
					</apex:column>
				</apex:pageBlockTable>
				<apex:commandButton action="{!addDefaultField}" value="Add Default Field" rendered="{!fieldMappingSalesforceObject.geopointe__Sfdc_Object__c != '' && fieldMappingSalesforceObject.geopointe__Geopointe_Object__c != ''}" reRender="fieldMapDefaultValues"/>
			</apex:outputPanel>
			<div class="pbHeader">
				<table border="0" cellpadding="0" cellspacing="0">
					<tbody>
						<tr>
							<td class="pbTitle">&nbsp;</td>
							<td class="pbButton">
								<apex:commandButton action="{!saveFieldMapping}" value="Save" reRender="fieldMappingView"/>
								<apex:commandButton action="{!selectFieldMappingView}" value="Cancel" reRender="fieldMappingView"/>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			</apex:outputPanel>
		</apex:pageBlock>
	</div>

    <div id="tab-userSettings">
        <c:sMainUserSettings rendered="true"/> 
    </div>

</div>

</apex:outputPanel>

</apex:form>

<apex:outputPanel id="dummyPanel"/>

<apex:form >
  
    <!--Action function that updates acton order -->
    <apex:actionFunction name="updateActionOrder" action="{!updateActionOrder}" rerender="dummyPanel">
        <apex:param name="actionJSON" assignTo="{!actionJSON}" value=""/>
    </apex:actionFunction>

    <!-- Update org settings on load -->
    <apex:actionFunction name="updateOrgSettings" action="{!updateOrgSettings}" rerender="dummyPanel"/>

</apex:form>


<script type="text/javascript">
	
	var j$ = jQuery.noConflict();
	
	j$(document).ready(function(){
		j$('#setupTabs').tabs({
            select: function(event, ui) {                   
                window.location.hash = ui.tab.hash;
            }
        }).show();

        //Autoload the correct tab based on tab url param
        var tabParam = '{!JSENCODE($CurrentPage.parameters.tab)}';
        if(tabParam){
             jQuery('#setupTabs a[href="#'+tabParam+'"]').click();
        }

        //Event listeners for sorting action tables
        j$("body").on('click','.actionSortCol img',function(e){ //Up
            var $listElement = j$(this).closest("tr");

            if(j$(this).hasClass('upArrowIcon')){
                $listElement.prev().before($listElement);

            }else if(j$(this).hasClass('downArrowIcon')){
                $listElement.next().after($listElement);

            }else if(j$(this).hasClass('doubleArrowDwn')){
                $listElement.appendTo($listElement.closest('tbody'));

            }else if(j$(this).hasClass('doubleArrowUp')){
                $listElement.prependTo($listElement.closest('tbody'));
            }
            
            updateSortOrder();

            e.preventDefault();
        });
        
        //Remove the standard last row class from the action tables, this messes up sorting styling as last tr has no bottom border
        jQuery("table[id$='recordActionsTable'] tr.last").removeClass('last');
        jQuery("table[id$='listActionsTable'] tr.last").removeClass('last');

        //Assign Geopointe Admin Permission set
        updateOrgSettings();
	});

    function updateSortOrder(){
        var actionsToUpdate = []; //Array of Action__c objects

        //Loop through record actions 
        jQuery("table[id$='recordActionsTable'] .hiddenId").each(function(i){
            actionsToUpdate.push({
                Id: jQuery(this).attr('data-id'),
                {!fieldPrefix}Order__c: i + 1
            });
        });
        
        //Loop through list actions
        jQuery("table[id$='listActionsTable'] .hiddenId").each(function(i){
            actionsToUpdate.push({
                Id: jQuery(this).attr('data-id'),
                {!fieldPrefix}Order__c: i + 1
            });
        });

        //Call action function that will update order
        updateActionOrder(JSON.stringify(actionsToUpdate));
    }
	
	//JS Merge fields
	gp_orgSettings = new Object();
	gp_orgSettings.folderPrefix = '{!orgFolderPrefix}';
    
</script>

</apex:page>