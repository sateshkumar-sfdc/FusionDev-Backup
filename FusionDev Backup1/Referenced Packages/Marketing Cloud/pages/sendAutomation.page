<apex:page controller="et4ae5.automationControl" tabstyle="ExactTargetPhoenix__tab" action="{!initialize}">
    <apex:stylesheet value="{!URLFOR($Resource.et4ae5__uxds, 'dist/themes/default/style.min.css')}"/>
    <script>
        var previousOnload = window.onload;
        var buOn = '{!defaultBUisEnabled}';
        window.onload = function ()
        {
            if (previousOnload)
            {
                previousOnload();
                if (buOn == "false")
                {
                    createBuFilter();
                }
            }
        }
    </script>
    <style>
        #popupcontent
        {
            position: fixed;
            top: 10%;
            left: 10%;
            width: 80%;
            height: 80%;
            display: none;
            overflow: auto;
            border: 3px solid #585858;
            background-color: white; //
            border: 1px solid #333;
            z-index: 100;
            padding: 5px;
            line-height: 20px;
        }

        #opaque
        {
            position: fixed;
            top: 0px;
            left: 0px;
            width: 100%;
            height: 100%;
            z-index: 99;
            display: none;
            background-color: gray;
            filter: alpha(opacity = 80);
            opacity: 0.8;
            -moz-opacity: 0.8;
            -khtml-opacity: 0.8
        }

        * html #opaque
        {
            position: absolute;
        }

        #showPopBtn 
        {
            border: 0 0 0 0;
            background-image: url(/img/func_icons/util/lookup20.gif);
            background-position: left top;
            height: 20px;
            width: 20px;
        }

        #showPopBtn:hover
        {
            border: 0 0 0 0;
            background-image: url(/img/func_icons/util/lookup20.gif);
            background-position: right top;
            height: 20px;
            width: 20px;
        }
        
        #filterLogicButton
        {
            border: 0 0 0 0;
            background-image: url(/img/func_icons/util/customize20.gif);
            background-position: left top;
            height: 20px;
            width: 20px;
        }

        #filterLogicButton:hover 
        {
            border: 0 0 0 0;
            background-image: url(/img/func_icons/util/customize20.gif);
            background-position: right top;
            height: 20px;
            width: 20px;
        }
        
        .pbTitle
        {
            white-space: nowrap;
        }

        .alert 
        {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-radius: 4px;
            font-size: 15px;
        }

        .alert h4
        {
            margin-top: 0;
            color: inherit;
        }

        .alert .alert-link
        {
            font-weight: bold;
        }

        .alert>p,.alert>ul 
        {
            margin-bottom: 0;
        }

        .alert-dismissable 
        {
            padding-right: 35px;
        }

        .alert-dismissable .close
        {
            position: relative;
            color: inherit;
        }

        .alert-et {
            color: black;
            background-color: white;
            border-color: #ffa100;
        }
        .alert-et hr {
            border-top-color: #f8e5be;
        }

        .alert-et .alert-link 
        {
            color: #a47e3c;
        }

        .bPageBlock .pbHeader
        {
            background-color: white;
        }

        .alert>p+p 
        {
            margin-top: 5px;
        }
        
        .alert-dismissable .close
        {
            top: -2px;
            right: -21px;
        }

        button.close
        {
            padding: 0;
            cursor: pointer;
            background: transparent;
            border: 0;
            -webkit-appearance: none;
        }

        .close
        {
            float: right;
            font-size: 15px;
            font-weight: bold;
            line-height: 1;
            color: #000000;
            text-shadow: 0 1px 0 #ffffff;
            opacity: 0.2;
            filter: alpha(opacity = 20);
        }

        .close:hover,.close:focus
        {
            color: #000000;
            text-decoration: none;
            cursor: pointer;
            opacity: 0.5;
            filter: alpha(opacity = 50);
        }
    </style>
    <div id="opaque" />
    <apex:outputPanel id="popupOP" rendered="true">
        <div id="popupcontent">
            <apex:form id="form" style="background-color:#ffffff">
                <apex:pageBlock mode="edit" id="pbWhite">
                    <table width="100%" border="0">
                        <tr>
                            <td colspan="2">
                                <table width="100%" style="background-color: white;">
                                    <tr>
                                        <td width="5">
                                            <img height="45" src="{!URLFOR( $Resource.ExactTargetImages, 'bumgmtautomation.png' )}" />
                                        </td>
                                        <td width="5" />
                                        <td width="100%" style="vertical-align: middle; font-size: 36px; color: #4f4f4f; font-family: 'Helvetica', 'Arial', sans-serif; font-weight: bold;">
                                            {!$label.slctBU}
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td width="250" valign="top">
                                <apex:pageBlock title="{!$Label.filterCrit}" mode="edit" id="criteria">
                                    <apex:actionFunction name="searchServer" action="{!runSearch}" rerender="results">
                                        <apex:param name="buName" value="" />
                                        <apex:param name="buId" value="" />
                                    </apex:actionFunction>
                                    <table cellpadding="2" cellspacing="2">
                                        <tr>
                                            <td style="font-weight: bold;">
                                                {!$label.buName} 
                                                <br />
                                                <apex:inputText value="{!buSearchName}" style="width:200px">
                                                    <apex:actionSupport event="onkeyup" action="{!runSearch}" rerender="results" />
                                                </apex:inputText>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="font-weight: bold;">
                                                {!$label.buId} 
                                                <br />
                                                <apex:inputText value="{!buSearchId}" style="width:200px">
                                                    <apex:actionSupport event="onkeyup" action="{!runSearch}" rerender="results" />
                                                </apex:inputText>
                                            </td>
                                        </tr>
                                    </table>
                                </apex:pageBlock>
                                <apex:outputPanel rendered="{!LEN(selectedBuDisp)>0}">
                                    <button type="button" onclick="hidepopup();">
                                        {!$Label.cancel}
                                    </button>
                                </apex:outputPanel>   
                            </td>
                            <td valign="top">
                                <apex:pageBlock mode="edit" id="results">
                                    <apex:pageBlockTable value="{!luBu}" var="buxyz">
                                        <apex:column >
                                            <apex:facet name="header">
                                                <apex:commandLink value="{!$Label.name}" action="javascript:toggleSort('business_unit_name__c');" rerender="results" />
                                            </apex:facet>
                                            <apex:outputLink value="javascript:selectLuBu('{!buxyz.id}');hidepopup();">
                                                {!buxyz.et4ae5__Business_Unit_Name__c}
                                            </apex:outputLink>
                                        </apex:column>
                                        <apex:column >
                                            <apex:facet name="header">
                                                <apex:commandLink value="{!$Label.id}" action="javascript:toggleSort('business_unit_id__c');" rerender="results" />
                                            </apex:facet>
                                            <apex:outputField value="{!buxyz.et4ae5__Business_Unit_ID__c}" />
                                        </apex:column>
                                    </apex:pageBlockTable>
                                </apex:pageBlock>
                            </td>
                        </tr>
                    </table>
                </apex:pageBlock>
            </apex:form>
        </div>
    </apex:outputPanel> 
    <br />
    <br />
    <table>
        <tr>
            <td>
                <img height="45" src="{!URLFOR( $Resource.ExactTargetImages, 'automation.png' )}" />
            </td>
            <td width="5" />
            <td style="font-size: 36px; color: #4f4f4f; font-family: 'Helvetica', 'Arial', sans-serif; font-weight: bold; margin: 0 0 15px 0;">
                {!$Label.etAtmtdSnd}
            </td>
        </tr>
    </table>
    <apex:form styleClass="fieldForm">
        <apex:actionFunction action="{!showMessage}" name="showMessage" rerender="pageMessages">
            <apex:param name="message" assignTo="{!message}" value="" />
            <apex:param name="messageSeverity" assignTo="{!messageSeverity}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="selectEmailJS" action="{!selectEmail}" rerender="emailName,emailSubject,exactTargetEmails,emailPreviewLinkWrapper" status="listEmailsStatus">
            <apex:param name="emailId" value="" />
            <apex:param name="emailName" value="" />
            <apex:param name="emailSubject" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="getFolderInfo" action="{!expandFolder}" rerender="pageMessages,emailName,emailSubject,exactTargetEmails,emailPreviewLinkWrapper" status="listEmailsStatus">
            <apex:param name="folderId" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="toggleSort" action="{!toggleSort}" rerender="results">
            <apex:param name="tsSortField" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="selectLuBu" action="{!selectLuBu}" onComplete="hidepopup();changeBusinessUnitId();" rerender="buildTreeJSMethod,exactTargetEmails,pageMessages,sendEmailForm,scPicklist,emailPreviewLinkWrapper" status="wholePageBlock">
            <apex:param name="luBuId" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="checkSendEmailReadiness" action="{!sendEnabler}" rerender="sendbutton" />
        <apex:actionFunction name="isSSon" action="{!isSSon}" rerender="sendbutton" />
        <apex:actionFunction name="isSSoff" action="{!isSSoff}" rerender="sendbutton" />
        <apex:actionFunction name="createBuFilter" action="{!createBuFilter}" oncomplete="showpopup();" status="wholePageBlock"  rerender="popupOP,exactTargetEmails,pageMessages" />
        <apex:actionFunction name="refreshPopup" action="{!voidReturn}" rerender="popupOP,opaqueOP" />
        <apex:stylesheet value="{!$Resource.et4ae5__ExactTargetStyles}" />
        <apex:actionFunction name="addCriteria" action="{!decideCriteria}" rerender="fieldCriteria" >
            <apex:param name="criteriaIndex" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="calculateInputType" action="{!calculateInputType}" rerender="fieldCriteria" status="fieldDependent"/>
        <apex:actionFunction name="showFilterLogic" action="{!showFilterLogic}" rerender="fieldCriteria" />
        <apex:actionFunction name="validateSubscriberField" action="{!validateSubscriberField}" rerender="pageMessages"/>
        <apex:actionFunction name="saveAutomation" action="{!automationSave}" rerender="pageMessages, fieldCriteria">
            <apex:param name="notificationEmails" value="" />
            <apex:param name="DEId" assignTo="{!dataextensionId}" value="" />
            <apex:param name="DEName" assignTo="{!dataextensionName}" value="" />
        </apex:actionFunction>       
        <div align="right">
            <apex:outputpanel >
                <apex:commandLink style="text-decoration:none;color:#015ba7;" value="{!$Label.abTests}" onMouseOver="this.style.textDecoration='underline'" onMouseOut="this.style.textDecoration='none'"
                    action="{!goToABTest}" />
                <apex:outputText value="{!pipe}" rendered="{!showDeepLinks}"/>
                <apex:outputLink target="_blank" style="text-decoration:none;color:#015ba7;" value="{!etLink}sessurl={!$Api.Partner_Server_URL_140}&sessid={!$Api.Session_ID}" onMouseOver="this.style.textDecoration='underline'" onMouseOut="this.style.textDecoration='none'" onclick="return confirm('{!$Label.msg0179}');" rendered="{!showDeepLinks}">
                  {!$Label.goToEt}
                </apex:outputLink>
                <apex:outputText rendered="{!hasEmail}" value="{!pipe}" />
                <apex:commandLink rendered="{!hasEmail}"
                    style="text-decoration:none;color:#015ba7;" value="{!$Label.emailSend}"
                    onMouseOver="this.style.textDecoration='underline'"
                    onMouseOut="this.style.textDecoration='none'" action="{!goToEmail}" />                
                <apex:outputText rendered="{!hasMobile}" value="{!pipe}" />
                <apex:commandLink rendered="{!hasMobile}" style="text-decoration:none;color:#015ba7;" value="{!$Label.mobileSend}" onMouseOver="this.style.textDecoration='underline'" onMouseOut="this.style.textDecoration='none'" action="{!goToMobile}" />
                <apex:outputText value="{!pipe}" />
                        <apex:commandLink style="text-decoration:none;color:#015ba7;" value="{!$Label.sendAtmtn}" onMouseOver="this.style.textDecoration='underline'" onMouseOut="this.style.textDecoration='none'"
                                action="{!goToTriggeredSends}" />   
                <apex:outputText rendered="{!isAdmin}" value="{!isAdminPipe}" />
                <apex:commandLink rendered="{!isAdmin}" style="text-decoration:none;color:#015ba7;" value="{!$Label.configInt}" onMouseOver="this.style.textDecoration='underline'" onMouseOut="this.style.textDecoration='none'" action="{!goToSettings}" />
                &nbsp;&nbsp;&nbsp;
            </apex:outputpanel>
        </div>
        <br />
        <apex:outputPanel id="pageMessages">
            <c:pageMessages closableErrors="true" />
        </apex:outputPanel>
        <apex:outputPanel id="previewDialog">
            <c:dynamicSendPreview />
        </apex:outputPanel>
        <apex:actionStatus id="wholePageBlock">
            <apex:facet name="start" >
                <img class="spinnerLarge" src="{!URLFOR( $Resource.et4ae5__ExactTargetImages, 'spinEMAIL.GIF' )}" style="background-color:white;"/>
            </apex:facet>
            <apex:facet name="stop">
                <apex:pageBlock mode="view">
                    <div align="right">
                        <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                        <b>
                            = {!$label.reqdInfo}
                        </b>
                    </div>
                    <apex:pageBlockSection id="sendEmailForm" columns="1">
                        <apex:pageBlockSectionItem helptext="{!$Label.msg0144}">
                            <apex:outputLabel value="{!$Label.name}"/>  
                            <apex:outputPanel >
                                <apex:inputText id="inptName" value="{!send.Name}" style="width:300px;" onblur="checkOnBlur(this.value);" />
                                <img src="/s.gif" style="width:1px;" />
                                <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                                <img src="/s.gif" style="width:1px;" />
                                <apex:image value="/img/msg_icons/error16.png" style="vertical-align:middle;" rendered="{!nameError}" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem helptext="{!$Label.msg0145}" >
                            <apex:outputLabel value="{!$Label.object}"/>
                            <apex:outputPanel id="objectSelected">
                                    <apex:selectList size="1" value="{!send.et4ae5__Object__c}">
                                        <apex:selectOptions value="{!objectSOs}"/>
                                        <apex:actionSupport event="onchange" action="{!null}" rerender="objectSelected,subscriberField,fieldCriteria" status="subscriberFieldStatus"/>
                                    </apex:selectList>
                                    <img src="/s.gif" style="width:1px;" />
                                    <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem helptext="{!$Label.msg0256}" >
                                <apex:outputLabel value="{!$Label.rcpLkup}"/>
                                <apex:actionStatus id="subscriberFieldStatus">
                                                                <apex:facet name="start" >
                                                                        <img class="spinnerLarge" src="{!URLFOR( $Resource.et4ae5__ExactTargetImages, 'spinEMAIL.GIF' )}" style="background-color:white;"/>
                                                                </apex:facet>
                                                                <apex:facet name="stop">
                                                        <apex:outputPanel id="subscriberField">
                                                                <apex:selectList value="{!send.et4ae5__Subscriber_Field__c}" size="1">
                                                                        <apex:selectOptions value="{!subscriberObjFields}"/>
                                                                        <apex:actionSupport event="onchange" onComplete="validateSubscriberField('{!send.et4ae5__Subscriber_Field__c}','{!send.et4ae5__Object__c}');" rerender="subscriberField" status="subscriberFieldStatus"/>
                                                                </apex:selectList>
                                                                <img src="/s.gif" style="width:1px;" />
                                                            <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                                                </apex:outputPanel>
                                                </apex:facet>
                                        </apex:actionStatus> 
                        </apex:pageblockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!NOT(editFiltersOn)}" helptext="{!$Label.msg0146}" >
                                <apex:outputLabel value="{!$Label.fieldCriteria}"/>
                                <apex:actionStatus id="editCriteriaStatus">
                                                                <apex:facet name="start" >
                                                                        <img class="spinnerLarge" src="{!URLFOR( $Resource.et4ae5__ExactTargetImages, 'spinEMAIL.GIF' )}" style="background-color:white;"/>
                                                                </apex:facet>
                                                                <apex:facet name="stop">
                                                <apex:outputPanel id="fieldCriteriaReadOnly">
                                                        <apex:outputLabel value="{!send.et4ae5__Filter__c}"/>
                                                        <apex:commandbutton value="{!$Label.edit}" action="{!decodeSavedFilter}" rerender="sendEmailForm" status="editCriteriaStatus" style="margin-left:10px;"/>
                                                </apex:outputPanel>
                                        </apex:facet>
                                </apex:actionStatus>      
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!editFiltersOn}" helptext="{!$Label.msg0146}" >
                            <apex:outputLabel value="{!$Label.fieldCriteria}"/>
                            <apex:outputPanel id="fieldCriteria">
                                <table style="width:90%;{!fieldCriteriaError}" >
                                    <apex:variable var="cnt" value="{!1}" />
                                    <apex:repeat value="{!filterList}" var="f" id="filterRepeat" >
                                        <tr >
                                            <td style="color:white;background-color:#4f4f4f;width:20px;vertical-align:middle;border:1px solid #4f4f4f;border-radius:6px;text-align:center;" >
                                                <b>
                                                    {!cnt}
                                                </b>
                                            </td >
                                            <td style="width:97%;vertical-align:middle;" >
                                                <apex:selectList style="width:40%;" value="{!f.fieldName}" size="1">
                                                    <apex:selectOptions value="{!objFields}"/>
                                                    <apex:actionSupport event="onchange" onComplete="javascript:calculateInputType();" rerender="fieldCriteria" status="fieldDependent"/>
                                                </apex:selectList>
                                                <apex:actionStatus id="fieldDependent" >
	                                                <apex:facet name="start" >
	                                                        <img class="spinnerLarge" src="{!URLFOR( $Resource.et4ae5__ExactTargetImages, 'spinEMAIL.GIF' )}" style="background-color:white;"/>
	                                                </apex:facet>
	                                                <apex:facet name="stop">
                                                        <apex:outputPanel >
                                                            <img src="/s.gif" style="width:1px;" />
                                                            <apex:selectList style="width:10%;" value="{!f.operator}" size="1">
                                                                <apex:selectOptions value="{!f.compOps}"/>
                                                            </apex:selectList>
                                                            <img src="/s.gif" style="width:1px;" />
                                                            <apex:inputText style="width:48%" value="{!f.value}" rendered="{!if(NOT(OR(f.inputType=2,f.inputType=3)),true,false)}" />
                                                            <!--Dates are automatically validated via the apex:inputField component upon rerendering -->
                                                            <apex:inputField style="width:24%" value="{!f.auto.et4ae5__DateTime__c}" rendered="{!if(f.inputType=2,true,false)}">
                                                                <apex:actionSupport event="onchange" rerender="fieldCriteria" status="fieldDependent"/>
                                                            </apex:inputField>
                                                            <apex:inputField style="width:24%" value="{!f.auto.et4ae5__Date__c}" rendered="{!if(f.inputType=3,true,false)}">
                                                                <apex:actionSupport event="onchange" rerender="fieldCriteria" status="fieldDependent"/>
                                                            </apex:inputField>
                                                            <img src="/s.gif" style="width:1px;" />
                                                        </apex:outputPanel>
                                                    </apex:facet>
                                                </apex:actionStatus>
                                            </td >
                                            <td style="width:1%;vertical-align:middle;">
                                                <apex:outputLink rendered="{!IF(AND(cnt=1,hidePlusBox),false,true)}" value="javascript:addCriteria({!cnt});" >
                                                    <apex:image style="vertical-align:middle;" value="{!URLFOR( $Resource.et4ae5__ExactTargetImages, IF(cnt>1,'minus','plus')+'On.jpg' )}" />
                                                </apex:outputLink>
                                            </td>
                                            <td style="width:1%;">
                                                <apex:image value="/s.gif" style="width:1px;" />
                                                <apex:outputLink rendered="{!AND(cnt=1,displayFilterLogicPicker)}" value="javascript:showFilterLogic();" >
                                                    <img src="/s.gif" style="vertical-align:middle;" id="filterLogicButton" alt="Filter Logic" title="Filter Logic" />
                                                </apex:outputLink>
                                            </td >
                                        </tr >
                                        <apex:variable var="cnt" value="{!cnt+1}" />
                                    </apex:repeat>
                                    <tr >
                                        <td colspan="2">
                                            <table style="width:100%;padding:0 0 0 0;" >
                                                <tr >
                                                    <td style="width:100%;padding-right:3px;{!filterLogicStyle}" >
                                                        <apex:inputText rendered="{!AND(renderFilterLogicString,cnt>1)}" style="width:100%" value="{!filterLogicString}"/>
                                                    </td >
                                                </tr >
                                            </table >
                                        </td >
                                    </tr >
                                </table >
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>                     
                        <apex:pageBlockSectionItem id="actionPicklist" helptext="{!$Label.msg0147}">
                            <apex:outputLabel value="{!$Label.triggerSendWhen}"/>
                            <apex:outputPanel id="triggerSendWhen">
                                    <apex:selectList size="1" value="{!send.et4ae5__Action__c}" id="sendAction" onchange="setTriggerWhenSendWarningMessage(this);">
                                        <apex:selectOptions value="{!actFields}"/>
                                    </apex:selectList>
                                    <img src="/s.gif" style="width:1px;" />
                                    <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                                    <apex:outputPanel id="existingRecordWarning" layout="block" style="margin:5px 0 0 0; width: 475px;">
                                        <apex:outputText id="existingRecordWarningText" style="color:#FFA100;" value="" />
                                    </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>                        
                        <apex:pageBlockSectionItem rendered="{!renderBULookup}" helpText="{!$Label.msg0014}">
                            <apex:outputLabel value="{!$Label.busUnit}" />
                            <apex:outputPanel >
                                <table>
                                    <tr>
                                        <td>
                                            <apex:outputText value="{!selectedBuDisp}" />
                                        </td>
                                        <td>
                                            <input type="image" onclick="javascript:createBuFilter();return false;" src="/s.gif" id="showPopBtn" />
                                        </td>
                                        <td style="width:1px;" />
                                        <td>
                                            <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                                        </td>
                                    </tr>
                                </table>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <!-- Email -->
                        <apex:pageBlockSectionItem id="emailTemplate" helpText="{!$Label.emailHelp}"> 
                            <apex:outputLabel for="emailName" value="{!$Label.email}" />
                            <apex:outputPanel id="emailWrapper" layout="block">
                                <apex:outputText id="emailName" value="{!localSend.email.name}" />
                                <apex:outputPanel id="emailPreviewLinkWrapper">
                                    <apex:outputPanel id="emailPreviewLink" rendered="{!IF( NOT( ISNULL( localSend.email ) ), true, false )}">
                                        <apex:actionStatus id="previewEmailStatus">
                                            <apex:facet name="start">
                                                <img class="spinnerLarge" src="{!URLFOR( $resource.ExactTargetImages, 'spinEMAIL.GIF' )}" />
                                            </apex:facet>
                                            <apex:facet name="stop">
                                                <apex:outputpanel >
                                                    <apex:commandLink value="{!$Label.previewEm}" onclick="javascript:showStaticPreview(jQuery('[id$=emailSubject]').val(),'{!localSend.email.Id}','{!localSend.selectedBusinessUnitId}');return false;" style="padding: 0 10px 0 10px;" status="previewEmailStatus" />
                                                    <apex:outputLink target="_blank" style="padding-right:10px;" value="{!etLink}sessurl={!$Api.Partner_Server_URL_140}&sessid={!$Api.Session_ID}&entityType=Email&displaynavi=false&entityid={!selectedEmail}" onclick="return confirm('{!$Label.msg0179}');" rendered="{!showDeepLinks}">
                                                        {!$Label.editEml}
                                                    </apex:outputLink>
                                                </apex:outputpanel>
                                            </apex:facet>
                                        </apex:actionStatus>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <apex:outputPanel >
                                    <apex:actionStatus id="listEmailsStatus">
                                        <apex:facet name="start">
                                            <img class="spinnerLarge" src="{!URLFOR( $resource.ExactTargetImages, 'spinEMAIL.GIF' )}" />
                                        </apex:facet>
                                        <apex:facet name="stop">
                                            <apex:commandButton id="listEmails" value="{!$Label.find}" action="{!listExactTargetEmails}" rerender="exactTargetEmails,pageMessages" status="listEmailsStatus"/>
                                        </apex:facet>
                                    </apex:actionStatus>
                                    <apex:outputText value="{!pipe}" rendered="{!showDeepLinks}"/>
                                                        <apex:outputLink target="_blank" style="padding-right:10px;" value="{!etLink}sessurl={!$Api.Partner_Server_URL_140}&sessid={!$Api.Session_ID}&entityType=Email&displaynavi=false&entityid=&entityAction=Create" onclick="return confirm('{!$Label.msg0179}');" rendered="{!showDeepLinks}">
                                                                {!$Label.new}
                                                                </apex:outputLink>                                    
                                    <img src="/s.gif" style="width:1px;" />
                                    <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                                    <apex:outputPanel id="exactTargetEmails" layout="block">
                                        <apex:actionStatus id="clickEmailStatus">
                                            <apex:facet name="start">
                                                <img class="spinnerLarge" src="{!URLFOR( $resource.ExactTargetImages, 'spinEMAIL.GIF' )}" />
                                            </apex:facet>
                                            <apex:facet name="stop">
                                                <apex:outputPanel styleClass="popup" layout="block" rendered="{!ShowEmailChooser }" style="z-index:99;">
                                                    <script type="text/javascript">
                                                        function toggleFolderDisplay( folderId ) 
                                                        {
                                                            // Identify folder div.
                                                            var folderDiv = document.getElementById( folderId );
                                                            
                                                            // Pull the folder class.
                                                            var folderClass = folderDiv.className;
                                                            
                                                            // Determine if the folder is open or closed.
                                                            var newFolderClass = 'emailFolder closed';
                                                            if( folderClass.indexOf( 'closed' ) > -1 ) {
                                                                newFolderClass = 'emailFolder open';
                                                            }

                                                            // Assing new class.
                                                            folderDiv.className = newFolderClass;
                                                        }
                                                    </script>
                                                    <apex:pageBlock >
                                                        <apex:pageBlockButtons location="both">
                                                            <apex:commandButton action="{!selectEmailCancel}" value="{!$Label.cancel}" rerender="exactTargetEmails" status="clickEmailStatus" />
                                                        </apex:pageBlockButtons>
                                                        <apex:repeat value="{!localSend.emails}" var="emailFolder1">
                                                            +
                                                            <a href="#" onclick="javascript:getFolderInfo('{!emailFolder1.Id}'); javascript:toggleFolderDisplay( 'emailFolder_{!emailFolder1.Id}' )">
                                                                <b> 
                                                                    {!emailFolder1.name} 
                                                                </b> 
                                                            </a>
                                                            <br />
                                                            <div class="emailFolder closed" id="emailFolder_{!emailFolder1.Id}">
                                                                <apex:repeat value="{!emailFolder1.subfolders}" var="emailFolder2" rendered="{!NOT( ISBLANK( emailFolder1.subfolders ) )}">
                                                                    +
                                                                    <a href="#" onclick="javascript:getFolderInfo('{!emailFolder2.Id}'); javascript:toggleFolderDisplay( 'emailFolder_{!emailFolder2.Id}' )">
                                                                        <b>
                                                                            {!emailFolder2.name} 
                                                                        </b> 
                                                                    </a>
                                                                    <br />
                                                                    <div class="emailFolder closed" id="emailFolder_{!emailFolder2.Id}">
                                                                        <apex:repeat value="{!emailFolder2.subfolders}" var="emailFolder3" rendered="{!NOT( ISBLANK( emailFolder2.subfolders ) )}">
                                                                            +
                                                                            <a href="#" onclick="javascript:getFolderInfo('{!emailFolder3.Id}'); javascript:toggleFolderDisplay( 'emailFolder_{!emailFolder3.Id}' )">
                                                                                <b> 
                                                                                    {!emailFolder3.name} 
                                                                                </b> 
                                                                            </a>
                                                                            <br />
                                                                            <div class="emailFolder closed" id="emailFolder_{!emailFolder3.Id}">
                                                                                <apex:repeat value="{!emailFolder3.subfolders}" var="emailFolder4" rendered="{!NOT( ISBLANK( emailFolder3.subfolders ) )}">
                                                                                    +
                                                                                    <a href="#" onclick="javascript:getFolderInfo('{!emailFolder4.Id}'); javascript:toggleFolderDisplay( 'emailFolder_{!emailFolder4.Id}' )">
                                                                                        <b> 
                                                                                            {!emailFolder4.name} 
                                                                                        </b> 
                                                                                    </a>
                                                                                    <br />
                                                                                    <div class="emailFolder closed" id="emailFolder_{!emailFolder4.Id}">
                                                                                        <apex:repeat value="{!emailFolder4.subfolders}" var="emailFolder5" rendered="{!NOT( ISBLANK( emailFolder4.subfolders ) )}">
                                                                                            +
                                                                                            <a href="#" onclick="javascript:getFolderInfo('{!emailFolder5.Id}'); javascript:toggleFolderDisplay( 'emailFolder_{!emailFolder5.Id}' )">
                                                                                                <b> 
                                                                                                    {!emailFolder5.name} 
                                                                                                </b> 
                                                                                            </a>
                                                                                            <br />
                                                                                            <div class="emailFolder closed" id="emailFolder_{!emailFolder5.Id}">
                                                                                                <apex:repeat value="{!emailFolder5.emails}" var="email5">
                                                                                                    &nbsp;-&nbsp;
                                                                                                    <a href="#" onclick="javascript:selectEmailJS( '{!email5.id}', '{!JSENCODE(email5.encName)}', '{!JSENCODE(email5.encTitle)}' );" status="sendButtonStatus">    
                                                                                                        {!email5.name} 
                                                                                                    </a>
                                                                                                    <br />
                                                                                                </apex:repeat>
                                                                                            </div>
                                                                                        </apex:repeat> 
                                                                                        <apex:repeat value="{!emailFolder4.emails}" var="email4">
                                                                                            &nbsp;-&nbsp;
                                                                                            <a href="#" onclick="javascript:selectEmailJS( '{!email4.id}', '{!JSENCODE(email4.encName)}', '{!JSENCODE(email4.encTitle)}' );" status="sendButtonStatus"> 
                                                                                                {!email4.name} 
                                                                                            </a>
                                                                                            <br />
                                                                                        </apex:repeat>
                                                                                    </div>
                                                                                </apex:repeat> 
                                                                                <apex:repeat value="{!emailFolder3.emails}" var="email3">
                                                                                    &nbsp;-&nbsp;
                                                                                    <a href="#" onclick="javascript:selectEmailJS( '{!email3.id}', '{!JSENCODE(email3.encName)}', '{!JSENCODE(email3.encTitle)}' );" status="sendButtonStatus"> 
                                                                                        {!email3.name} 
                                                                                    </a>
                                                                                    <br />
                                                                                </apex:repeat>
                                                                            </div>
                                                                        </apex:repeat> 
                                                                        <apex:repeat value="{!emailFolder2.emails}" var="email2">
                                                                            &nbsp;-&nbsp;
                                                                            <a href="#" onclick="javascript:selectEmailJS( '{!email2.id}', '{!JSENCODE(email2.encName)}', '{!JSENCODE(email2.encTitle)}' );" status="sendButtonStatus"> 
                                                                                {!email2.name} 
                                                                            </a>
                                                                            <br />
                                                                        </apex:repeat>
                                                                    </div>
                                                                </apex:repeat> 
                                                                <apex:repeat value="{!emailFolder1.emails}" var="email1">
                                                                    &nbsp;-&nbsp;
                                                                    <a href="#" onclick="javascript:selectEmailJS( '{!email1.id}', '{!JSENCODE(email1.encName)}', '{!JSENCODE(email1.encTitle)}' );" status="sendButtonStatus"> 
                                                                        {!email1.name} 
                                                                    </a>
                                                                    <br />
                                                                </apex:repeat>
                                                            </div>
                                                        </apex:repeat>
                                                    </apex:pageBlock>
                                                </apex:outputPanel>
                                            </apex:facet>
                                        </apex:actionStatus>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem helpText="{!$Label.msg0051}">
                            <apex:outputLabel value="{!$Label.subject}" />
                            <apex:inputText style="width:350px" value="{!localSend.email.title}" disabled="true" id="emailSubject"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!renderEmailPreview}" id="emailPreview">
                            <apex:outputLabel value="" />
                            <apex:outputpanel >
                                <table style="border: 0px">
                                    <tr>
                                        <td>
                                            <table style="border: 3px solid #f77f00; border-style: double solid solid double; padding: 0px;">
                                                <tr>
                                                    <td>
                                                        <img src="data:image/png;base64,{!previewImage}" />
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                        <td>
                                            <apex:commandLink action="{!closeEmailPreview}" rerender="sendEmailForm" status="previewEmailStatus">
                                                <img src="/img/search_dismiss.gif" />
                                            </apex:commandLink>
                                        </td>
                                    </tr>
                                </table>
                            </apex:outputpanel>
                        </apex:pageBlockSectionItem>
                    </apex:pageblocksection>
                    <apex:pageblocksection id="bottomBlock" columns="1">
                                                <!-- Send Classification -->
                        <apex:pageBlockSectionitem id="selectedSC" helptext="{!$Label.msg0148}">
                                        <apex:outputLabel for="sendClassification" value="{!$Label.sendClass}" />
                                <apex:outputPanel id="scPicklist">
                                    <apex:selectList id="sendClassification" value="{!localSend.sendClassificationSelected}" size="1">
                                        <apex:selectOptions value="{!localSend.sendClassificationOptions}" />
                                        <apex:actionSupport event="onclick" action="{!sendEnabler}" rerender="sendbutton" />
                                    </apex:selectList>
                                    <img src="/s.gif" style="width:1px;" />
                                    <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                                        
                                        <!-- From Sender Profile Override -->
                                        <br/>
                                        <span style="padding-left:2px;" class="helpButton" id="msg0149-_help">
                                                <apex:outputLabel for="from" value="{!$Label.ovrridSC}" style="color:#4a4a56;font-size:11px;font-weight:bold;"/>
                                                <img src="/s.gif" alt="" class="helpOrb" style="height:15px; width:20px; vertical-align:bottom;" title="" />
                                        </span>
                                        <br/>
                                        <apex:outputPanel id="fromPicklist">
                                            <apex:selectList id="from" value="{!localSend.fromEmailSelected}" size="1" style="display:block;">
                                                <apex:selectOptions value="{!localSend.fromOptions}" />
                                                <apex:actionSupport event="onclick" action="{!sendEnabler}" rerender="sendbutton" />
                                            </apex:selectList>                                
                                        </apex:outputPanel>
                                </apex:outputPanel>
                        </apex:pageBlockSectionitem>
                        
                        <!-- Data Extension --> 
                        <apex:pageBlockSectionItem helpText="{!$Label.DataExtensionHelp}" rendered="{!renderDataExtensions}">   
                            <apex:outputLabel value="{!$Label.DataExtension}" />
                            <apex:outputPanel >
                                <div id="dataExtensionSpinner">
                                    <img class="spinnerLarge" src="{!URLFOR( $resource.ExactTargetImages, 'spinEMAIL.GIF' )}" />
                                </div>
                                <div style="overflow: auto; height:85px;">
                                	<div id="jstree"></div>
                                </div>	
                                <br/>
                                <input id="dataExtensionNameInput" type="text" style="width:350px" disabled="disabled" /> 
                                <input type="button" value="{!$Label.DataExtensionClear}" onclick="clearDataExtension();" class="btn" />   
                            </apex:outputPanel>     
                        </apex:pageBlockSectionItem>
                        
                        <!-- Use All Subscribers List --> 
                        <apex:pageBlockSectionItem helpText="{!$Label.msg0254}" rendered="{!NOT(send.et4ae5__Use_All_Subscribers_List__c)}">
                            <apex:outputLabel value="{!$Label.addAllSubsToASL}" />
                            <apex:inputCheckbox value="{!send.et4ae5__Use_All_Subscribers_List__c}" disabled="{!NOT(enableAllSubs)}"/>
                        </apex:pageBlockSectionItem>                         
                        
                        <!-- Disable Individual Tracking --> 
                        <apex:pageBlockSectionItem rendered="{!renderDIT}" helpText="{!$Label.msg0007}" >
                            <apex:outputLabel value="{!$Label.disILT}" />
                            <apex:inputCheckbox value="{!send.et4ae5__Individual_Tracking_Disabled__c}" />
                        </apex:pageBlockSectionItem> 

                        <!-- Scheduled Send Date/Time --> 
                        <apex:pageBlockSectionItem id="sendDateTimeRadios" helpText="{!sendDateTimeHelpText}" helptext="{!$Label.msg0150}">
                            <apex:outputLabel for="dateBlock" value="{!$Label.sendTime}" />
                            <apex:outputPanel id="dateBlock" layout="block">
                                <apex:outputPanel layout="block">
                                    <input type="radio" id="fromSelectorIm" name="immeSelector" onclick="swapDateSource();" status="sendButtonStatus" />
                                    <apex:outputLabel for="imme" value="{!$Label.immediate}" />
                                </apex:outputPanel>                             
                                <apex:outputPanel id="sendDateTimeWrapper" layout="block" rendered="true">
                                    <input type="radio" id="fromSelectorDT" name="immeSelector" onclick="swapDateSource();" status="sendButtonStatus" />
                                    <apex:outputLabel for="sendDateTime" value="{!$Label.delayed}" />
                                    <br />
                                    <apex:outputPanel id="schCalendar">
                                        <apex:inputField id="sendDateTime" value="{!send.et4ae5__Hours_Delayed__c}" style="width:50px;" />
                                        {!$Label.hours}
                                        <img src="/s.gif" style="width:1px;" />
                                        <img style="vertical-align:middle;" height="18px" src="{!URLFOR( $Resource.ExactTargetImages, 'reqEmail.png' )}" />
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:pageBlockSectionitem>
                        <!--Error Notifications -->                     
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel for="errorNotifications" value="{!$Label.SndNotifTo}"/>
                            <apex:outputPanel id="errorNotifications">
                                <span class="helpButton" id="msg0181-_help"> 
                                    <apex:inputCheckbox value="{!send.et4ae5__Notify_Running_User_On_Error__c}"/>       
                                    {!$Label.whoTrigEv} ({!$Label.rnngUsr})
                                    <img src="/s.gif" alt="" class="helpOrb" style="height:15px; width:20px; vertical-align:bottom;" title="" />        
                                    <script>        
                                        sfdcPage.setHelp('msg0181','{!JSENCODE($Label.msg0181)}');      
                                    </script>       
                                </span> 
                                <br/>
                                <span class="helpButton" id="msg0182-_help"> 
                                    <apex:inputCheckbox value="{!send.et4ae5__Notify_Owner_On_Error__c}"/>       
                                    {!$Label.whoOwnTrig} ({!$Label.trigSendOwner})
                                    <img src="/s.gif" alt="" class="helpOrb" style="height:15px; width:20px; vertical-align:bottom;" title="" />        
                                    <script>        
                                        sfdcPage.setHelp('msg0182','{!JSENCODE($Label.msg0182)}');      
                                    </script>       
                                </span>                                 
                                <br/>
                                <br/>
                                <span class="helpButton" id="msg0183-_help">       
                                    {!$Label.addlUsersEmails}
                                    <img src="/s.gif" alt="" class="helpOrb" style="height:15px; width:20px; vertical-align:bottom;" title="" />        
                                    <script>        
                                        sfdcPage.setHelp('msg0183','{!JSENCODE($Label.msg0183)}');      
                                    </script>       
                                </span> 
                                <br/>
                                <div style="margin-top:5px;">                                
                                    <c:TypeAheadPillBox placeholder="{!$Label.entrUsrEmls}" object="User" secondaryField="Email" style="width:250px;font-size:12px;" existingPillString="{!existingNotificationEmails}" stealFocus="false"/>
                                </div>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                        <!-- Certify Opt-in -->
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$Label.optInCrtfyF}" />
                            <apex:inputCheckbox value="{!optIn}" >
                                <apex:actionSupport event="onclick" action="{!sendEnabler}" rerender="sendbutton" />
                            </apex:inputCheckbox>
                        </apex:pageBlockSectionItem>

                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="sendbutton">

                        <!-- Send Button -->
                        <apex:pageBlockSectionItem rendered="{!optIn}">
                            <apex:outputLabel value="" />
                            <apex:outputPanel >
                                <input type="button" value="{!$Label.save}" onclick="saveAutomationRecord();" ondblclick="saveAutomationRecord();" style="background:#ff993f;color:white" class="btn"/>
                                <apex:commandButton value="{!$Label.cancel}" action="{!cancel}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!NOT( optIn )}">
                            <apex:outputLabel value="" />
                            <apex:outputPanel >
                                <apex:commandButton value="{!$Label.save}" disabled="true"/>
                                <apex:commandButton value="{!$Label.cancel}" action="{!cancel}"/>
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>

                    </apex:pageBlockSection>
                </apex:pageBlock>
            </apex:facet>
        </apex:actionStatus>
    </apex:form>
    <apex:includeScript value="{!URLFOR($Resource.et4ae5__jQuery)}" />
    <apex:includeScript value="{!URLFOR($Resource.et4ae5__uxds, 'dist/jstree.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.et4ae5__bootstrap, 'dist/js/bootstrap.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.et4ae5__bootstrap, 'dist/js/bootstrap.min.js')}" />
    
    <apex:outputpanel id="buildTreeJSMethod">
    
        <script type="text/javascript">
            
            // These 2 methods are rerendered when the user changes Business Units
            // This is done so the new Business Unit Id can be used by the Javascript
            
            function changeBusinessUnitId(){
                var sBusinessUnitId = '{!businessUnitId}';
                if('{!renderDataExtensions}')
                  rebuildTree(sBusinessUnitId);
            }
            
            function getBusinessUnitId() {
                var sBusinessUnitId = '{!businessUnitId}';
                if('{!renderDataExtensions}')
                 buildTree(sBusinessUnitId);
            }
                    
        </script>
    
    </apex:outputpanel>
    
    <script type="text/javascript">
        var j$ = jQuery.noConflict();
        
        // Array used to store ids of folders that have been open. 
        var lRetrievedFolders = [];
        
        // Data Extension Id loaded from the controller
        var DataExtensionId = '{!dataextensionId}';
        
        // Data Extension Name loaded from controller
        var DataExtensionName = '{!dataextensionName}';
        
        // Wait till DOM has loaded
        j$(document).ready(function() {
            var sendActionTag = j$("select[id$=sendAction]");
            setTriggerWhenSendWarningMessage(sendActionTag);
        
            // Get the Business Unit that was loaded from Controller
            getBusinessUnitId();    
        
            // Set the disabled input field with the Data Extension Name set earlier
            $('#dataExtensionNameInput').val(DataExtensionName);                
        });
        
        // Rebuilds tree after Business Unit has changed
        function rebuildTree(sBusinessUnitId){
        
            // Destroy the current tree
            j$("#jstree").jstree("destroy");
        
            // Show spinner while new tree is being created
            j$('#dataExtensionSpinner').show(); 
        
            // Reset variables
            lRetrievedFolders = [];  
            DataExtensionId = null;
            DataExtensionName = null;
        
            // Build tree
            buildTree(sBusinessUnitId);
        }
        
        // This methods uses a SalesForce Remote Action to call to marketing cloud and retrieve the Data Extension Folers.
        // This is called after the DOM has been loaded
        function buildTree(sBusinessUnitId){
            
            // Call the Remote Action
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.automationControl.getDataExtentionFolders}', sBusinessUnitId,
                function(result, event){
                    if (event.status) {
                        if (!result.hasError) {
                            
                            if(result.count > 0) {
                            
                                // Add the jstree UI to the jstree DIV
                                j$('#jstree').jstree({
                                    'core' : {
                                        check_callback : true
                                    }
                                });
                                
                                // Get the Folders in the response
                                var lDataExtensionFolders = result.items;
                                
                                // Loop through folders and add them to the jstree
                                for (i = 0; i < lDataExtensionFolders.length; i++) {
                                
                                    // Get the folder
                                    var oDataExtensionFolder = lDataExtensionFolders[i];
                                    
                                    // Create the JSON used by jtree to create the folder node
                                    var NewRootNodeJSON = { id:oDataExtensionFolder.id, text:oDataExtensionFolder.name };
                                    
                                    // Check to see if the folder should be a root node (parent #)
                                    if(oDataExtensionFolder.parentId == 0 || (oDataExtensionFolder.name === 'Shared Data Extensions' && oDataExtensionFolder.editable == 0)){ 
                                        j$('#jstree').jstree('create_node', '#', NewRootNodeJSON, 'last');
                                    }else{
                                        j$('#jstree').jstree('create_node', oDataExtensionFolder.parentId, NewRootNodeJSON, 'last');
                                    }               
                                }
                                
                                // Listen for the open node event
                                j$('#jstree').on("open_node.jstree", function (e, data) {
                                
                                    // Get the node
                                    var node = data.instance.get_node(data.node);
                                    
                                    // Call another Remote Action to retrieve folder contents
                                    getDataExtensions(node, sBusinessUnitId);
                                    
                                });
                                
                                // Listen for event when node is clicked on
                                j$('#jstree').on("changed.jstree", function (e, data) {
                                    if(data.selected.length > 0) {
                                    
                                        // Get the node
                                        var node = data.instance.get_node(data.selected[0]);
                                        
                                        // Check to see if node has jstree-file icon, that means its a Data Extension
                                        if(node.icon != 'jstree-file') {
                                            DataExtensionId = '';
                                            DataExtensionName = '';
                                            data.instance.deselect_node(data.node);
                                            getDataExtensions(node, sBusinessUnitId);
                                        }else{
                                            
                                            // Check to see if the node has already been selected
                                            if(DataExtensionId != node.id){
                                            
                                                // set variables with selected node information
                                                DataExtensionId = node.id;
                                                DataExtensionName = node.text;
                                                $('#dataExtensionNameInput').val(DataExtensionName);
                                                
                                            }else{
                                            
                                                // Deselect node if user clicks on it twice
                                                DataExtensionId = '';
                                                DataExtensionName = '';
                                                data.instance.deselect_node(data.node);
                                                $('#dataExtensionNameInput').val(DataExtensionName);
                                                
                                            }
                                        }
                                    }
                                });
                            }
                        
                        } else {
                            showMessage(result.message, 'error'); 
                        }  
                    } else if (event.type === 'exception') {
                        showMessage(event.message + ' ' + event.where, 'error');            
                    } else {
                        showMessage(event.message, 'error'); 
                    }   
                    j$('#dataExtensionSpinner').hide();     
                },
                {escape: true}
            );          
        }
        
        // Method ran when user clicks Clear Data Extension Button
        function clearDataExtension() {
        
            // Clear Data Extension Variabls and deselect all nodes
            DataExtensionId = '';
            DataExtensionName = '';
            j$('#jstree').jstree("deselect_all");
            j$('#dataExtensionNameInput').val(DataExtensionName);                               
        }
        
        // This method uses an action function to retrieve folder contents from Marketing Cloud
        // This is ran when user opens or clicks node in tree               
        function getDataExtensions(node, sBusinessUnitId){
        
            // check to see if node has jstree-file icon.
            // This means its not a folder and do nothing
            if(node.icon != 'jstree-file') {
            
                // Get the node id (which is also Marketing Cloud folder Id)
                var iDataExtensionFolderId = node.id;   
                
                // Make sure the folder hasn't already been clicked on. Folders are only
                // loaded one time.
                if(j$.inArray(iDataExtensionFolderId, lRetrievedFolders) == -1){
                
                    // Close the node while the code adds more contents
                    j$("#jstree").jstree("close_node", node);       
                    
                    // show the spinner
                    j$('#jstree').jstree(true).get_node(node, true).addClass("jstree-loading");
                    
                    // Use a Remote Action to retrieve the folders contents from Marketing Cloud            
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.automationControl.getDataExtentionFolderContents}', iDataExtensionFolderId, sBusinessUnitId,
                        function(result, event){
                            if (event.status) {
                                if (!result.hasError) {     
                                
                                    // Add the folders Id to array so it will not fire another call out
                                    lRetrievedFolders.push(iDataExtensionFolderId); 
                                    
                                    if(result.count > 0){
                                    
                                        // Get the contents of the folder
                                        var lDataExtensions = result.items;
                                        
                                        // Loop through the contents
                                        for (i = 0; i < lDataExtensions.length; i++) {
                                        
                                            var oDataExtension = lDataExtensions[i];                                                                    
                                        
                                            // Make sure to only add TriggeredSendDataExtension children to the folder
                                            if(oDataExtension.customObjectTemplateName === 'TriggeredSendDataExtension'){
                                            
                                                // jstree JSON to create new node. Use the jstree icon
                                                var NewNodeJSON = { id:oDataExtension.id, text:oDataExtension.name, icon:"jstree-file"};
                                                
                                                // Add node to tree
                                                j$('#jstree').jstree('create_node', node, NewNodeJSON, 'last');
                                            }
                                        }
                                    }
                                    
                                    // Stop the spinner and open the node to show the contents added 
                                    j$('#jstree').jstree(true).get_node(node, true).removeClass("jstree-loading");          
                                    j$("#jstree").jstree("open_node", node);
                                    
                                } else {
                                    j$('#jstree').jstree(true).get_node(node, true).removeClass("jstree-loading");
                                    showMessage(result.message, 'error');
                                }
                            } else if (event.type === 'exception') {
                                j$('#jstree').jstree(true).get_node(node, true).removeClass("jstree-loading");
                                showMessage(event.message + ' ' + event.where, 'error');
                            } else {
                                j$('#jstree').jstree(true).get_node(node, true).removeClass("jstree-loading");
                                showMessage(event.message, 'error');
                            }   
                        },
                        {escape: true}
                    );
                }
            }
        }           
        
        // Method fires when the Name field uses focus
        function checkOnBlur(f) {
            if(containsInvalidChars(f)){
                showMessage("{!JSENCODE($Label.specialcharerror)}", 'error');
            }
        }

        // Check to see if value contains special characters. 
        function containsInvalidChars(str){ 
            return /[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(str);
        }    
                
        function setTriggerWhenSendWarningMessage(sendActionTag) {
            var sendActionVal = j$(sendActionTag).val();
            var criteriaMet = sendActionVal == "{!JSENCODE(UpdateActionValue)}" || sendActionVal == "{!JSENCODE(EitherActionValue)}";
            if (Boolean(criteriaMet))
                j$("span[id$=existingRecordWarningText]").html("{!JSENCODE($Label.asTriggerSendWhenExistingRecordUpdated)}");
            else
                j$("span[id$=existingRecordWarningText]").html("");
        }
        
        // Identify triggerable elements.
        var fsEmail = jQuery( '[id$=fromSelectorEmail]' );
        var fsImme = jQuery( '[id$=fromSelectorIm]' );
        var fsDaTi = jQuery( '[id$=fromSelectorDT]' );

        // Assign event actions.
        fsImme.onclick = swapDateSource;
        fsDaTi.onclick = swapDateSource;
        
        var sendBtnEnabled = true;
        sfdcPage.setHelp('msg0149','{!JSENCODE($Label.msg0149)}');
        function submitSend()
        {
            if (sendBtnEnabled)
            {
                sendBtnEnabled = false;
                return true;
            }
            return false;
        }
        
        // Initial swap execution.
        if (jQuery( '[id$=sendDateTime]' ).val() != null && jQuery( '[id$=sendDateTime]' ).val() > 0)
        {
            jQuery( '[id$=fromSelectorDT]' ).attr("checked","checked");
        }
        else
        {
            swapDateSource();
        }
        
        function swapDateSource() 
        {
            j$ = jQuery.noConflict();
            fsImme = jQuery( '[id$=fromSelectorIm]' );
            fsDaTi = jQuery( '[id$=fromSelectorDT]' );
            // Identify picklists.
            var SDT = jQuery( '[id$=schCalendar]' );
            var calChoice = jQuery( '[id$=sendDateTime]' );
        
            // Disable both picklists.
            SDT.hide();

            if (jQuery( '[id$=fromSelectorDT]' ).is(':checked') == true )
                fsDaTi.attr("checked","checked");
            if (jQuery( '[id$=fromSelectorDT]' ).is(':checked') == false &&  jQuery( '[id$=fromSelectorIm]' ).is(':checked') == false){
                fsImme.attr("checked","checked");
            }
            if( fsDaTi.is(":checked") == true ) 
            {
                SDT.show();
                isSSon();
            }
            else
            {
                calChoice.val(null);
                isSSoff();
            }
           
            checkSendEmailReadiness();
        }

        function showpopup()
        {
            fsEmail.attr("checked","checked");
            fsImme.attr("checked","checked");
            var scOP = jQuery( '[id$=scPicklist]' );
            scOP.hide();
            document.getElementById('opaque').style.display='block';
            var popUp = document.getElementById("popupcontent");
            popUp.style.display = "block";
        } 

        function hidepopup()
        {
            fsEmail.attr("checked","checked");
            fsImme.attr("checked","checked");
            var popUp = document.getElementById("popupcontent");
            popUp.style.display = "none";
            document.getElementById('opaque').style.display='none';
                if (jQuery( '[id$=sendDateTime]' ).val() != null && jQuery( '[id$=sendDateTime]' ).val() > 0)
                {
                    jQuery( '[id$=fromSelectorDT]' ).attr("checked","checked");
                }
                else
                {
                    swapDateSource();
                }
        }
        
        function saveAutomationRecord () {
            if(containsInvalidChars(j$('[id$=inptName]').val())){
                showMessage("{!JSENCODE($Label.specialcharerror)}", 'error');
            }else{
                if (typeof DataExtensionId != 'undefined' && DataExtensionId && 0 != DataExtensionId.length) {
                    saveAutomation(convertPillBoxSelectionsToString(), DataExtensionId, DataExtensionName);
                }else{
                    saveAutomation(convertPillBoxSelectionsToString(), '', '');
                }
            }            
        }
        
    </script> 
</apex:page>